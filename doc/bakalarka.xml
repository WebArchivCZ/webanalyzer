<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
<!ENTITY % fithesis SYSTEM "http://www.fi.muni.cz/~xpavlov/fithesis.mod">
%fithesis;
]>
<book lang="sk" xmlns:fi="http://www.fi.muni.cz/~xpavlov/fithesis">
    <bookinfo>
        <title>Rozpoznanie a archivácia českého webu mimo národnú doménu</title>
        <subtitle>Bakalárska práca</subtitle>
        <author>
            <firstname>Ivan</firstname>
            <surname>Vlček</surname>
            <fi:woman>false</fi:woman>
            <fi:faculty>fi</fi:faculty>
            <fi:advisor>Ing. Peter Žabička</fi:advisor>
        </author>
        <fi:thanks>Ďakujem vedúcemu mojej práce, Ing. Petrovi Žabičkovi za
            ochotu, usmerňovanie a pripomienky a rovnako celému týmu WebArchiv. 
        </fi:thanks>
        <pubdate>2008</pubdate>
        <abstract>
            <para>Cieľom práce bolo navrhnúť a zrealizovať systém pre rozpoznávanie a archiváciu webových
                informačných zdrojov ako súčasť archivačného systému Heritrix. Systém by mal tieto zdroje čo
                najpresnejšie a najefektívnejšie automaticky identifikovať a archivovať pre využitie
                v projekte WebArchiv Národnej knižnice ČR. Programové riešenie systému je implementované
                v jazyku Java. Program využíva funkcie viacerých projektov. Zvolenou platformou bol Linux
                s vývojovým prostredím NetBeans.
            </para>
        </abstract>
        <keywordset>
            <keyword>WebAnalyzer</keyword>
            <keyword>Heritrix</keyword>
            <keyword>WebArchiv</keyword>
            <keyword>archivácia webu</keyword>
            <keyword>Rozpoznanie webu</keyword>
            <keyword>Sklizeň</keyword>
        </keywordset>
    </bookinfo>
    <toc></toc>
    <chapter>
        <title>Úvod</title>
        <para>Internet patrí k najúspešnejším objavom ľudstva. 
            Mnohí z nás si v súčasnosti život bez neho nevieme ani predstaviť.
            Používame ho každodenne v práci, v škole aj doma, pretože ponúka
            široký sortiment možností pre takmer všetky skupiny ľudí.
        </para>
        <para>
            Internet sa začal
            masovo zavádzať a používať v nespočetnom množstve inštitúcií, firiem
            a iných organizácií, či už verejnoprávnych alebo súkromných.
            Jeho veľký vplyv sa postupne premieta aj do škôl. Mení sa spôsob a forma
            výuky, ktorá sa s Internetom stáva interaktívnejšia, kvalitnejšia a zábavnejšia.
        </para>
        <para>
            Ďalšou možnosťou, ktorú Internet ponúka je umiestňovanie materiálov
            prostredníctvom webových stránok. Mnoho užívateľov túto službu pokladá
            za výhodnú a rýchlu, čím sa na Internete každodenne objavujú nové a nové
            informácie a dokumenty. V posledných rokoch je zaznamenaný 
            obrovský nárast elektronických online zdrojov prístupných iba na Internete.
            Mnohé z týchto zdrojov sú považované za veľmi hodnotné.
            Existuje však aj riziko, že tieto informácie budú zmenené alebo dokonca 
            zmazané a navždy stratené. Preto
            sa musíme pokúsiť takéto informácie zachrániť, aby boli zachované kultúrne
            umelecké a historické hodnoty, ktoré tieto dokumenty nesú a aby boli
            prístupné aj pre budúce generácie. Ak sa na Internet
            pozeráme z tohto hľadiska, tak ho môžeme označiť za studňu ľudskej 
            múdrosti, o ktorú sa musíme starať a nemôžeme dovoliť aby vyschla.
        </para>
        <para>
            Otázkou uchovávania obsahu Internetu sa zaoberali inštitúcie už pred mnohými rokmi.
            Medzi najznámejšie patrí neprofitujúca spoločnosť <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive, ktorá 
            bola založená v roku 1996 za účelom vybudovania Internetovej knižnice a 
            poskytnutia permanentného prístupu pre výskumných pracovníkov, historikov, 
            školákov a všeobecnú verejnosť k historickým kolekciam, ktoré existujú v digitálnej podobe. V súčasnosti
            <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive zahrňuje vo svojich kolekciách texty, audio záznamy, animované obrázky,
            softwér a webové stránky.
            Prostredníctvom <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive môžete nájsť webové stránky, ktoré v súčasnosti 
            neexistujú alebo sa môžete pozrieť ako vyzerali vaše obľúbené stránky pred 
            desiatimi rokmi a sledovať ich vývoj až do súčasnosti. 
        </para>
        <para>
            <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive (IA)
            obsahuje snímky webových stránok už od roku 1996 až po dnes. Aj keď je 
            priemerná doba životnosti stránky 100 dní, <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive archivuje
            stránky pravidelne každé dva mesiace. Pre posilnenie stability a trvanlivosti
            archívu je IA zrkadlovaný do Bibliotheca Alexandrina v Egypte. 
            Podľa údajov z 20. februára IA v Bibliotheca Alexandrina
            zahŕňa webovú kolekciu od roku 1996 po rok 2006, 2000 hodín Egyptského a
            US vysielania a 1000 archívnych filmov. Toto všetko predstavuje 1.5 PB
            dát uložených na 880 počítačoch. Archív je plne funkčný a prístupný cez
            webové stránky projektu IA.
        </para>
        <para>
            Sprístupnenie archívu je uskutočňované pomocou programu <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine.
            <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine je služba, ktorá Vám umožňuje navštíviť archivované verzie
            webových stránok. Všetko čo potrebujete spraviť je napísať URL, ktorú
            požadujete a <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine Vám vráti zoznam všetkých
            archivovaných verzií zadanej stránky.                
        </para>
        <para>
            V Českej Republike existuje projekt nazvaný <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv, ktorý sa zaoberá 
            archiváciou a zprístupnením českého webu. 
            Jediné rozhodovacie kritérium pre identifikovanie českého webu funguje
            na základe domény. Tým je zaručené, že všetky
            URL s českou doménou budú archivované. Existujú však stránky, ktoré
            sa nachádzajú na iných doménach ako .cz a sú jednoznačne považované za 
            české. <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv má záujem o tieto stránky a preto je jeden z
            novších cieľov WebArchivu <indexterm><primary>archivácia</primary></indexterm>archivácia českého webu mimo doménu .cz.
        </para>
        <para>
            Táto práca popisuje systém na rozpoznanie a archiváciu českého webu
            mimo národnú doménu. Systém na rozpoznanie českého webu je integrovaný
            do systému <indexterm><primary>Heritrix</primary></indexterm>Heritrix, ktorý okrem iného tieto identifikované stránky 
            archivuje. Pomocou systému je možné identifikovať <indexterm><primary>bohemikálny zdroj</primary></indexterm>bohemikálny(český) zdroj
            na základe viacerých kritérií, ktoré sú 
            v systéme zakomponované. Za <indexterm><primary>bohemikálny zdroj</primary></indexterm>bohemikálny zdroj systém považuje všetky
            stránky, ktoré spĺňajú určité podmienky. Tieto podmienky môže užívateľ
            upraviť pred spustením samotného systému, tak aby vyhovovali jeho 
            požiadavkam pre definíciu bohemikálneho zdroja. Podmienky sú
            vyhodnocované na základe kritérií implementovaných v systéme. Medzi
            základné patria identifikácia jazyka, identifikácia českých IP adries, 
            identifikácia e-mailov a telefónnych čísel. Každá spracovaná stránka, 
            ktorá je systémom na rozpoznanie identifikovaná ako česká je 
            následne archivovaná systémom <indexterm><primary>Heritrix</primary></indexterm>Heritrix.
        </para>
        <para>
            Identifikáciou a archiváciou webu mimo národnú doménu sa zaoberajú 
            aj iné krajiny. Kritéria na identifikáciu národného webu sú vo 
            všetkých prípadoch veľmi podobné. 
        </para>
        <para>
            Portugalský web je definovaný ako množina dokumentov, ktoré sú 
            umiestnené na doméne .PT alebo sú umiestnené na doménach 
            .COM, .NET, .ORG, .TV, napísané v portugalskom jazyku a sú 
            odkazované aspoň z jednej stránky s doménou .PT. Ďalšie kritérium, 
            ktoré používajú je <emphasis>WHOIS</emphasis><citation>13</citation>
            databáza, podľa ktorej zisťujú z ktorej krajiny pochádza majiteľ 
            webu<citation>14</citation>.
        </para>
        <para>
            Austrálsky web je definovaný ako množina dokumentov umiestnených 
            na doméne .AU. Počas sklizne sa stránky odkazujúce do iných domén 
            kontrolujú pomocou GeoIP databáze, ktorá zistí, či sa stránka 
            fyzicky nachádza v Austrálii<citation>15</citation>.
        </para>
        <para>
            V Dánsku používajú automatický a manuálny prístup na identifikáciu 
            národných stránok. Automatický prístup pracuje na základe GeoIP 
            databázy rovnako ako v Austrálii. Manuálny prístup znamená 
            vyhľadávanie stránok cez Google, ktoré obsahujú dánske názvy, 
            ale nie sú umiestnené na .DK doméne<citation>16</citation>.
        </para>
        <para>
            V Thajsku definujú nasledujúce kritéria pre národný web. Stránka je 
            umiestnená na .TH doméne alebo IP adresa serveru je fyzicky 
            umiestnená v Thajsku (GeoIP) alebo je stránka napísaná v thajskom 
            jazyku.
        </para>
        <para>
            V Grécku považujú za národný web stránky, ktoré sú napísané v 
            gréckom jazyku alebo sú umiestnené na .GR doméne alebo obsahujú 
            informácie, ktoré sa viažu s Gréckom. Napríklad sa vyhľadávajú 
            slová ako sú Hellas, Greek a Greece<citation>17</citation>.
        </para>
        <para>
            Následná kapitola bližšie popisuje spôsob archivácie v projekte 
            <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv.
        </para>
    </chapter>
    
    <chapter>
        <title>Projekt <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv</title>
        <para>
            <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv je digitálny archív <quote>českých</quote>
            webových zdrojov, ktoré sú tu zhromažďované za účelom ich dlhodobého uchovávania.
            Ochranu a uchovávanie týchto dokumentov zaisťuje od roku 2000 Národná knižnica 
            ČR v spoluprácií s Moravskou zemskou knižnicou a Ústavom výpočtovej techniky
            Masarykovej univerzity. Pri archivácií a sprístupňovaní webu sa 
            používajú softwérové nástroje
            vyvinuté organizáciou <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive<citation>01</citation>.
        </para>
        
        <sect1>
            <title>Archivácie WebArchivu</title>
            <para>
                Ideálnym cieľom projektu by bolo archivovať všetky české zdroje, 
                ktoré kedy boli na Internete umiestnené. Z technických dôvodov to
                však nie je možné a preto <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv používa osvedčené techniky, ktoré
                sa k tomuto ideálnemu cieľu približujú. V súčasnosti <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv
                používa tri základné spôsoby archivácie.
            </para>
            <para><emphasis role="bold"><indexterm><primary>Plošné sklizne</primary></indexterm>Plošné sklizne</emphasis>
                Cieľom tohoto prístupu je <indexterm><primary>archivácia</primary></indexterm>archivácia čo najväčšieho počtu domácich 
                webových zdrojov na základe parametrov definovaných v aplikovanom SW.
                Hlavným parametrom
                pre archiváciu českého webu je národná doména<citation>02</citation>.
            </para>
            <para><emphasis role="bold">Výberový prístup</emphasis>
                Pravidlá výberu dokumentov registrovaných v národnej bibliografii
                zahrňujú:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>Územie</emphasis> - všetky dokumenty (zdroje)
                        publikované na území Českej republiky.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Jazyk</emphasis> - všetky zdroje v čestine (
                        bez ohľadu na miesto vydania)
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Autorstvo</emphasis> - všetky zdroje českých
                        autorov (bez ohľadu na miesto vydania)
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Predmet/obsah</emphasis> - všetky zdroje, 
                        ktorých obsah sa týka Českej republiky alebo českého národa (bez 
                        ohľadu na miesto vydania)<citation>02</citation>.
                    </para>
                </listitem>
            </itemizedlist>
            <para><emphasis role="bold">Tematické zbierky</emphasis>
                Tematické zbierky sú monotematické súbory webových dokumentov. V rámci
                tematických sklizní sledujeme predovšetkým také deje, ktoré doprevádza
                celospoločenská debata a je u nich teda predpoklad, že zaujmú 
                významejšie miesto z hľadiska dejín Českej republiky 
                (napr. voľby, povodne)<citation>02</citation>. 
            </para>
        </sect1>
        
        <sect1>
            <title>Plošná <indexterm><primary>sklizeň</primary></indexterm>sklizeň národnej domény</title>
            <para>
                <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv vykonáva plošnú <indexterm><primary>sklizeň</primary></indexterm>sklizeň národnej domény pomocou
                softvérových nástrojov, webových pavúkov (crawler - angl.), 
                ktoré sú na túto činnosť stavané. <indexterm><primary>Webové pavúky</primary></indexterm>Webové pavúky dokážu 
                automaticky prechádzať celý Web, stránku po stránke.
                Medzi najpopulárnejšie patrí systém <indexterm><primary>Heritrix</primary></indexterm>Heritrix, <indexterm><primary>Httrack</primary></indexterm>Httrack a 
                <indexterm><primary>Nedlib Harvester</primary></indexterm>Nedlib Harvester. 
            </para>
            <para>
                <indexterm><primary>Webové pavúky</primary></indexterm>Webové pavúky začínajú parsovaním štartovacej webovej stránky,
                ktoré sú v tejto problematike známe pod názvom <indexterm><primary>semienka</primary></indexterm>semienka. 
                Semienka sú zdrojové URI (unified resource identifier), z 
                ktorých celý proces začína. Pri parsovaní webový pavúk hľadá 
                hypertextové odkazy, ktoré sú na tejto stránke umiestené a 
                odkazujú na ďalšie stránky. Pavúk následne parsuje nájdené 
                stránky, aby našiel nové odkazy. Celý proces sa rekurzívne
                opakuje, pokiaľ už nebudú žiadne odkazy, ktoré by sa spracovali.
                Webový pavúk posiela HTTP požiadavky na dokumenty umiestnené na
                serveroch. Postup je rovnaký ako keď užívateľ kliká na odkazy vo
                svojom webovom prehliadači. Webový pavúk však dokáže tento 
                proces automatizovať.
            </para>
            <sect2>
                <title>Úvod do Heritrixu</title>
                <para>
                    <indexterm><primary>WebArchiv</primary></indexterm>WebArchiv používa pri plošnej sklizni softvér <indexterm><primary>Heritrix</primary></indexterm>Heritrix, 
                    ktorého hlavnou výhodou je modulárnosť a rozšíriteľnosť.
                    <indexterm><primary>Heritrix</primary></indexterm>Heritrix sa dá jednoducho nastaviť tak, aby používal modul, 
                    ktorý pri spracovaní webových stránok akceptuje len stránky
                    s českou doménou. Všetky ostatné URI iných domén sú 
                    ignorované. 
                </para>
                <para>
                    <indexterm><primary>Heritrix</primary></indexterm>Heritrix je pred spustením sklizne nakonfigurovaný. Na 
                    vstupe je množina semienok, ktoré predstavujú adresy 
                    rozsiahlych českých portálov. Ideou je zvoliť za <indexterm><primary>semienka</primary></indexterm>semienka
                    také stránky, ktoré obsahujú čo najviac odkazov na iné 
                    české zdroje a stránky. Ideálny kandidát pre semienko
                    je napríklad portál <emphasis>seznam.cz</emphasis>, 
                    ktorý je výborným rozcestníkom do českého webu.
                </para>
                <para>
                    Proces nazvaný <emphasis><indexterm><primary>sklizeň</primary></indexterm>sklizeň_cz_2007</emphasis>, 
                    ktorého hlavnou úlohou bola celoplošná <indexterm><primary>sklizeň</primary></indexterm>sklizeň domácich 
                    webových zdrojov, trval 3 týždne na serverovom počítači. 
                    Výsledkom sklizne vykonanej na systéme <indexterm><primary>Heritrix</primary></indexterm>Heritrix je kolekcia
                    archívnych súborov, ktoré sú umiestnené v adresárovej 
                    štruktúre na disku. Celá kolekcia za rok 2007
                    obsahuje 81 300 000 dokumentov o celkovej veľkosti 3.6 TB.                    
                </para>
                <sect3>
                    <title>Archívny súbor - <indexterm><primary>ARC</primary></indexterm>ARC</title>
                    <para>
                        <indexterm><primary>ARC</primary></indexterm>ARC je súbor vytvorený pre archívne účely a je hlavným
                        stavebným kameňom arhívu. Obvyklá veľkosť ARCu je 100 MB.
                        Skladá sa z hlavičky, ktorá jednoznačne identifikuje
                        každý <indexterm><primary>ARC</primary></indexterm>ARC a jednotolivých URL záznamov, ktoré obsahujú
                        samotné dáta. Nástupcom súboru ARC je WARC, ktorý sa bude tradične používať na ukládanie dát získaných zo 
                        sklizní Internetového obsahu. WARC je navrhnutý ako norma ISO 28500.
                    </para>
                </sect3>
            </sect2>
        </sect1>
        
        <sect1>
            <title>Zprístupnenie archívu</title>
            <para>
                <indexterm><primary>ARC</primary></indexterm>ARC súbory, ktoré sme získali z Heritrixu sa musia zaindexovať, 
                tak aby bolo možné v nich jednotlivé záznamy rýchlo vyhľadávať .
                Problém indexovania a vyhľadávania záznamov v <indexterm><primary>ARC</primary></indexterm>ARC súboroch 
                rieši systém <indexterm><primary>ARCWayback</primary></indexterm>ARCWayback, ktorý si WebArchív vyvinul presne na 
                svoje potreby. Sprístupnenie týchto záznamov poskytuje ďalší
                systém <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine. 
                Systém <indexterm><primary>ARCWayback</primary></indexterm>ARCWayback, ktorý používa WebArchiv je popísaný 
                v práci <emphasis>Accessing the Czech Web Archive</emphasis><citation>11</citation>.
            </para>
            <sect2>
                <title><indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine</title>
                <para>
                    Systém vyvinutý spoločnosťou <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive, ktorý 
                    užívateľom umožňuje prehliadať archivované verzie webových
                    stránok z rôznych časov. <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine poskytuje prístup k archivovaným
                    dátam prostredníctvom URL (unified resource locator). Jeho 
                    nevýhoda je, že nepodporuje fulltextové prehľadávanie, takže
                    užívateľ musím poznať URL adresu webovej stránky aby mohol 
                    pristúpiť k archívu. Po zadaní URL adresy <indexterm><primary>Wayback Machine</primary></indexterm>Wayback Machine
                    vráti zoznam dátumov, kedy bola stránka archivovaná. Potom 
                    stačí kliknúť na jeden zo záznamov a prezerať archivovanú
                    stránku. Odkazy, ktoré sa na tejto stránke nachádzajú 
                    odkazujú na iné stránky z archívu. Pri klikaní na odkazy sa
                    Wayback Machine vždy snaží vrátiť stránky, ktoré sú 
                    archivované v čo najbližšom čase ako zvolená stránka.
                    To znamená že môžete 
                    surfovať po webe tak, ako vyzeral v danom čase v minulosti.
                </para>
            </sect2>
        </sect1>
        
        <sect1>
            <title>Nástup sklizne mimo národnú doménu</title>
            <para>
                Sklizeň mimo doménu .cz by mala naviazať na celoplošnú <indexterm><primary>sklizeň</primary></indexterm>sklizeň 
                českých webových zdrojov. Pri sklizni národnej domény sa archivujú
                všetky české stránky, ktoré prejdú procesom Heritrixu. Všetky
                odkazy, ktoré sa na spracovávaných stránkach nájdu sa filtrujú
                na základe domény. Odkazy s českou doménou sú ďalej zahrnuté do
                kolekcie URL adries čakajúcich na spracovanie, zatiaľ čo ostané
                odkazy vedúce do iných domén sú odhodené.
            </para>
            <para>
                Tieto odhodené odkazy mimo doménu .cz však môžu byť hodnotným 
                materiálom pri nástupe sklizne mimo .cz. Existuje možnosť, že
                odkazy mimo doménu .cz, ktoré sa nachádzajú na českej stránke 
                môžu odkazovať na iné relevanté, české stránky, ktorých 
                doména už nie je česká. Preto je výhodné skúmať tieto odhodené
                odkazy zo stránok s českou doménou ako prvé. <indexterm><primary>Heritrix</primary></indexterm>Heritrix sa dá
                nakonfigurovať tak, aby tieto odhodené odkazy z českých stránok 
                logoval do osobitného súboru. Tento súbor bude po skončení sklizne 
                domény .cz plný hodnotných odkazov, ktoré môžeme predať Heritrixu
                na vstupe vo forme semienok pri následnej sklizni mimo doménu .cz.
            </para>
            <para>
                Po skončení <emphasis>sklizne_cz_2007</emphasis> <indexterm><primary>Heritrix</primary></indexterm>Heritrix
                vygeneroval súbor <emphasis>outScope.log</emphasis>, ktorého
                veľkosť je 16 GB. Na každom riadku sa nachádzajú logovacie 
                informácie a URL, ktorá sa použije ako semienko pre 
                <indexterm><primary>sklizeň</primary></indexterm>sklizeň mimo doménu .cz. Z technických príčin nie je možné predhodiť
                Heritrixu 16 GB dlhý zoznam semienok a preto je nutné tento 
                zoznam rozdeliť na viac kolekcií, ktoré sa postupne spracujú.
            </para>
        </sect1>
    </chapter>
    
    <chapter>
        <title><indexterm><primary>Heritrix</primary></indexterm>Heritrix</title>
        <para>
            <indexterm><primary>Heritrix</primary></indexterm>Heritrix je webový pavúk a zároveň archivačný nástroj v jednom.
            Je to open-source nástroj napísaný v Jave, vyvíjaný spoločnosťou 
            <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive. Poskytuje užívateľsky príjemne webové rozhranie a
            okrem toho umožňuje spustiť a inicializovať <indexterm><primary>sklizeň</primary></indexterm>sklizeň cez príkazový 
            riadok, čím ušetrí čas pri spúšťaní opakovaných úloch. Užívateľský
            manuál sa nachádza na stránkach Heritrixu <emphasis>http://crawler.archive.org</emphasis>
        </para>
        <para>
            Pred spustením sklizne je treba v Heritrixe vytvoriť takzvaný <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis>,
            v ktorom sa ďalej vyberajú a konfigurujú moduly, ktoré chcete pri
            sklizni použiť. Prostredníctvom webového rozhrania je konfigurácia
            intuitívna a jednoduchá. Pri vytváraní <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis> je nutné zadať jeho 
            názov, stručný popis a hlavne zoznam semienok, ktoré sa majú použiť
            ako iniciálne URI pri štarte sklizne.
        </para>
        <para>
            Defaultné moduly sú ihneď nastavené, ale ak chcete robiť 
            konkrétnu <indexterm><primary>sklizeň</primary></indexterm>sklizeň, tak si môžete zvoliť tie moduly, ktoré 
            aktuálne potrebujete. Pri každom module je jeho stručný popis, aby
            bolo jasné na akú úlohu daný modul slúži.
        </para>
        <para>
            Po konfigurácií modulov ostáva posledný krok. Vytvorený <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis>
            stačí už len spustiť. Webové 
            rozhranie ukazuje aktuálne informácie o bežiacom <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis>, medzi ktoré
            patrí počet aktuálne pracujúcich vláken, spotrebovaná pamäť, počet a 
            veľkosť archivovaných dokumentov.
        </para>
        
        <sect1>
            <title>Prehľad Heritrixu</title>
            <para>
                <indexterm><primary>Heritrix</primary></indexterm>Heritrix je navrhnutý modulárne. Ktoré moduly sa majú použiť 
                môže byť nastavené za behu z užívateľského rozhrania. Ak chcete
                aby sa webový pavúk správal inak ako je defaultne nastavený, 
                môžete naprogramovať vlastný modul, ktorý pridáte do Heritrixu k
                ostatným alebo ním nahradíte nietkorý zo stávajúcich modulov.
            </para>
            <para>
                Pred programovaním vlastného modulu je nevyhnutné vedieť akým
                spôsobom <indexterm><primary>Heritrix</primary></indexterm>Heritrix pracuje a keďže program je vytvorený v Jave, 
                je nutné vedieť sa orientovať v tomto programovacom jazyku.
            </para>
            <para>
                <indexterm><primary>Heritrix</primary></indexterm>Heritrix pozostáva z jadra a prídavných modulov. Triedy jadra 
                sa dajú konfigurovať, ale nemôžu byť odstránené, zatiaľ čo triedy 
                prídavných modulov môžu byť nahradené.
                <citation>03</citation>.
            </para>
            <figure>
                <title>Prehľad Heritrixu</title>
                <mediaobject>
                    <imageobject>
                        <imagedata format="PNG" scale="40" fileref="crawler_overview1.png" />
                    </imageobject>
                </mediaobject>
            </figure>            
        </sect1>
        <sect1>
            <title>Objekt <indexterm><primary>CrawlController</primary></indexterm>CrawlController</title>
            <para>
                <indexterm><primary>CrawlController</primary></indexterm>CrawlController obsahuje všetky triedy, ktoré spolupracujú pri 
                vykonávaní plazenia po stránkach. Poskytuje rozhranie pre 
                činnosť plazenia a spúšťa hlavné vlákno <emphasis>master thread</emphasis>,
                ktoré prideľuje URI adresy z objektu <indexterm><primary>Frontier</primary></indexterm>Frontier jednotlivým 
                vláknam <indexterm><primary>ToeThread</primary></indexterm>ToeThread. <indexterm><primary>CrawlController</primary></indexterm>CrawlController predstavuje globálny kontext
                celého procesu plazenia a všetky subkomponenty k sebe zvyčajne 
                pristupujú a komunikujú cez <indexterm><primary>CrawlController</primary></indexterm>CrawlController. 
                <citation>03</citation>.
            </para>
        </sect1>
        <sect1>
            <title>Objekt <indexterm><primary>Frontier</primary></indexterm>Frontier</title>
            <para>
                Objetk <indexterm><primary>Frontier</primary></indexterm>Frontier je zodpovedný za prideľovanie následovnej URI, ktorá
                má byť spracovaná. Má zapezpečovať zdvorilosť, ktorá zaisťuje, že
                žiadny webový server nebude príliš zaťažovaný sťahovaním stránok, 
                ktoré sú na ňom umiestnené. Po tom ako je URI spracovaná je 
                predaná opäť objektu <indexterm><primary>Frontier</primary></indexterm>Frontier spolu so všetkými jej objavenými 
                odkazmi, ktoré by mal <indexterm><primary>Frontier</primary></indexterm>Frontier naplánovať na ďalšie 
                spracovanie<citation>03</citation>.
            </para>
            <para>
                <indexterm><primary>Frontier</primary></indexterm>Frontier je objekt, ktorý udržuje stav procesu prechádzania
                stránok. Aktuálny stav zahŕňa hlavne tieto položky:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>URI adresy, ktoré boli objavené</emphasis>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>URI adresy, ktoré sa aktuálne spracúvajú</emphasis>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>URI adresy, ktoré boli spracované</emphasis>
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                Trieda <indexterm><primary>Frontier</primary></indexterm>Frontier implementuje rozhranie <indexterm><primary>Frontier</primary></indexterm>Frontier a môže byť nahradená
                hocijakou inou triedou <indexterm><primary>Frontier</primary></indexterm>Frontier, ktorá bude toto rozhranie implementovať.
                Je nutné spomenúť, že naprogramovanie triedy <indexterm><primary>Frontier</primary></indexterm>Frontier nie je triviálna
                záležitosť<citation>03</citation>.
            </para>
            <para>
                Objekt <indexterm><primary>Frontier</primary></indexterm>Frontier sa spolieha na správanie nasledújucich 
                externých procesorov: PreconditionEnforcer, LinksScoper a
                FrontierScheduler.
            </para>
            <para>
                Procesor PreconditionEnforcer zabezpečuje, že 
                <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> a 
                <emphasis><indexterm><primary>robots</primary></indexterm>robots.txt</emphasis>
                sú skontrolované pred tým, než sa daná stránka stiahne zo serveru.
                LinksScoper testuje či je daná URI v oblasti záujmu a ak áno, tak aký
                výsoký je záujem o danú URI. Podľa toho LinksScoper nastaví prioritu
                pre danú URI, na základe ktorej sa vykonáva zoradenie URI adries 
                čakajúcich na spracovanie v objekte <indexterm><primary>Frontier</primary></indexterm>Frontier. Toto zoradenie sa už vykonáva 
                pomocou objektu FrontierScheduler<citation>03</citation>.
            </para>
        </sect1>
        <sect1>
            <title>Objekt <indexterm><primary>ToeThread</primary></indexterm>ToeThread</title>
            <para>
                <indexterm><primary>Heritrix</primary></indexterm>Heritrix je multivláknová aplikácia. Každá URI je 
                spracovávaná svojím vlastným vláknom nazvaným <indexterm><primary>ToeThread</primary></indexterm>ToeThread. Objekt 
                <indexterm><primary>ToeThread</primary></indexterm>ToeThread žiada objekt <indexterm><primary>Frontier</primary></indexterm>Frontier o novú URI a následne ju posiela cez
                všetky procesory. Po spracovaní URI posledným procesorom si <indexterm><primary>ToeThread</primary></indexterm>ToeThread
                pýta ďalšiu URI čakajúcu na spracovanie<citation>03</citation>.
            </para>
        </sect1>
        <sect1>
            <title>Objekt Processor</title>
            <para>
                Procesory sú zoskupené do procesorových reťazcov. Každá reťaz vykonáva s
                URI nejaký proces. Keď objekt Processor spracuje URI, <indexterm><primary>ToeThread</primary></indexterm>ToeThread pošle URI
                do nasledujúceho procesoru, pokiaľ nie je spracovaná všetkými 
                procesormi. Procesor má možnosť prikázať URI aby preskočila do konkrétnej
                reťaze procesorov. Rovnako ak Processor vyhodí fatálnu chybu, tak
                URI automaticky skočí do poslednej reťaze nazvanej <emphasis>Post-processing chain</emphasis>.
                Postup spracovania URI jednotlivými procesorovými reťazami:
                <figure>
                    <title>Reťazec procesorov</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata format="PNG" scale="40" fileref="processing_steps.png" />
                        </imageobject>
                    </mediaobject>
                </figure>    
                Postup spracovania URI jednotlivými procesorovými reťazcami:
            </para>
            <sect2>
                <title>Pre-fetch processing chain</title>
                <para>
                    Prvá reťaz procesorov je zodpovedná za vyšetrovanie, či URI môže byť
                    spracovaná. Je tu zahrnutá kontrola, či sú všetky predpoklady 
                    splnené (<indexterm><primary>DNS</primary></indexterm>DNS-vyhľadávanie, kontrola súboru <indexterm><primary>robots</primary></indexterm>robots.txt, autentifikácia).
                    Je tiež možné úplne zablokovať spracovanie URI adries, ktoré neprešli
                    kontrolou<citation>03</citation>.
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Vlastníci webových stránok používajú textový súbor nazvaný <indexterm><primary>robots</primary></indexterm>robots.txt, aby prostredníctvom
                            neho predali inštrukcie o ich stránkach webovým robotom (The Robots Exclusion Protocol).
                            Vždy keď chce webový robot navštíviť URL webovej stránky, najprv hľadá tento súbor
                            <indexterm><primary>robots</primary></indexterm>robots.txt. Pri návšteve URL http://www.seznam.cz sa robot pokúša získať
                            súbor z URL http://www.seznam.cz/<indexterm><primary>robots</primary></indexterm>robots.txt. V tomto súbore
                            môže byť zapísané, že by robot nemal navštevovať žiadne stránky z 
                            danej domény. Existuje však mnoho robotov, ktoré tento súbor
                            a jeho inštrukcie ignorujú <citation>04</citation>.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    V reťazi Pre-fetch processing chain by mali byť zahrnuté tieto
                    procesory alebo náhradné moduly, ktoré vykonávajú podobné operácie:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis>procesor Preselector</emphasis> - 
                            Posledná kontrola, či by URI mala byť skutočne spracovaná.
                            Môže napríklad znovu skontrolovať, či URI patrí do oblasti
                            záujmu. Je to užitočné ak sa zmenia pravidlá oblasti záujmu
                            v priebehu procesu samotného plazenia po webových stránkach.
                            Kontrola či URI patrí do oblasti záujmu je zvyčajne 
                            vykonávaná objektom LinksScoper, predtým než sú nové URI
                            pridané do objektu Frotnier
                            <citation>03</citation>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>procesor PreconditionEnforcer</emphasis> -
                            Zabezpečuje, že všetky predpoklady pre spracovanie URI
                            sú splnené. Konkrétne zahrňuje overenie, že <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> a 
                            <emphasis><indexterm><primary>robots</primary></indexterm>robots.txt</emphasis> boli získané pre danú URI
                            <citation>03</citation>.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Fetch processing chain</title>
                <para>
                    Procesory v tejto reťazi sú zodpovedné za získanie dát zo 
                    vzdialeného serveru. Mal by tu byť jeden procesor pre každý 
                    protokol, ktorý <indexterm><primary>Heritrix</primary></indexterm>Heritrix podporuje, ako napríklad FetchHTTP
                    <citation>03</citation>.
                </para>
            </sect2>
            <sect2>
                <title>Extractor processing chain</title>
                <para>
                    V tomto bode je obsah dokumentu odkazovaného prostredníctvom
                    URI prístupný a niekoľko procesorov sa bude snažiť získať
                    z tohoto obsahu nové odkazy<citation>03</citation>.
                </para>
            </sect2>
            <sect2>
                <title>Write/Index processing chain</title>
                <para>
                    Táto reťaz je zodpovedná za zapisovanie dát do archívnych 
                    súborov. <indexterm><primary>Heritrix</primary></indexterm>Heritrix obsahuje procesor ARCWriterProcessor, ktorý
                    zapisuje dáta do formátu <indexterm><primary>ARC</primary></indexterm>ARC. Nové procesory by mohli byť 
                    naprogramované tak, aby podpodorvali aj iné formáty<citation>03</citation>.
                </para>
            </sect2>
            <sect2>
                <title>Post-processing chain</title>
                <para>
                    URI adresa vždy prechádza cez túto reťaz procesorov aj keď
                    bolo predtým rozhodnuté iným procesorom, že táto URI sa nebude
                    spracovávať. Reťaz Post-processing chain musí obsahovať
                    nasledujúce procesory alebo obdobné moduly vykonávajúce 
                    podobné operácie<citation>03</citation>.
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis>procesor CrawlStateUpdater</emphasis> - 
                            Aktualizuje informácie o každom hoste, ktoré sa môžu uplatniť
                            pri ďalšom spojení na server. Konkrétne <emphasis><indexterm><primary>robots</primary></indexterm>robots.txt</emphasis> a informácie
                            o IP adresách<citation>03</citation>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>procesor LinksScoper</emphasis> -
                            Kontroluje všetky odkazy extraktované z aktuálneho získaného
                            obsahu. Všetky odkazy, ktoré nepatria 
                            do oblasti záujmu (oblasť záujmu môže byť napr. doména .cz), 
                            ktorú sme si zvolili sú vyradené<citation>03</citation>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>procesor FrontierScheduler</emphasis> -
                            Rozplánuje všetky odkazy nájdene v aktuálne spracovávanej
                            URI do objektu <indexterm><primary>Frontier</primary></indexterm>Frontier tak aby sa postupne spracovali podľa
                            priority<citation>03</citation>.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
        </sect1>
        <sect1>
            <title>Triedy URI v Heritrixe</title>
            <para>
                URI adresy sú v Heritrixe reprezentované objektom UURI, ktorý rozširuje objekt URI.
                Ak je UURI adresa úspešne vytvorená, tak to znamená
                že pôvodná URI spĺňa všetky podmienky a nejedná sa o žiadnu
                podvrhnutú URI, ktorá by mohla neskôr v procese spracovania
                vytvárať konflikty. Objekt UURI taktiež poskytuje mnohé metody na prístup k
                rôznym častiam URI<citation>05</citation>.
            </para>
            <para>
                Dve triedy, ktoré obaľujú triedu UURI v Heritrixe sú:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis><indexterm><primary>CandidateURI</primary></indexterm>CandidateURI</emphasis> -
                        Je to URI, ktorá je objavená počas behu procesu a môže 
                        byť zahrnutá do kolekcie URI čakajúcich na spracovanie.
                        <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI sa vytvorí z objektu Link, ktorý predstavuje
                        odkaz objavený na spracovávanej CrawlURI. Vytváranie objektu<indexterm><primary>CandidateURI</primary></indexterm>CandidateURI z
                        objektu Link má na starosti procesor LinksScoper. <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                        môže byť zahrnutá do kolekcie čakajúcich URI, ak spĺňa definované
                        požiadavky. Pri zavolaní objektom <indexterm><primary>ToeThread</primary></indexterm>ToeThread sa <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI zmení
                        na objekt CrawlURI<citation>05</citation>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>CrawlURI</emphasis> -
                        CrawlURI predstavuje URI, ktorá sa práve spracováva procesormi.
                        Uchováva stav, ktorý sa
                        mení počas spracovania. CrawlURI je 
                        potomok triedy <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI. Samotná instancia je 
                        vytvorená v momente, keď sa vyberie z objektu <indexterm><primary>Frontier</primary></indexterm>Frontier 
                        a predá sa procesorom na spracovanie<citation>05</citation>.
                    </para>
                </listitem>
            </itemizedlist>
            <sect2>
                <title>Zoznam atribútov objektu CrawlURI</title>
                <para>
                    Objekt CrawlURI poskytuje zoznam atribútov, ktorý je použitý
                    na uchovanie ľubovoľných informácií o URI počas procesu jej 
                    spracovnia. Pri písaní nových procesorov, určite využijete
                    tento zoznam atribútov. Je to vlastne zoznam párov kľúč a
                    hodnota<citation>05</citation>.
                </para>
            </sect2>
            <sect2>
                <title>The recorder streams</title>
                <para>
                    <indexterm><primary>Heritrix</primary></indexterm>Heritrix by nebol moc užitočný, keby neposkytoval prístup k 
                    HTTP požiadavku a odpovedi. Pre tento účel má objekt CrawlURI
                    metodu nazvanú getHTTPRecorder(). Rekordér je referencovaný
                    v objekte CrawlURI a tým prístupný pre všetky procesory, ktoré
                    s CrawlURI pracujú<citation>05</citation>.
                </para>
            </sect2>            
        </sect1>
        <sect1>
            <title>Požiadakvy pre každý konfigurovateľný modul</title>
            <para>
                Ak chcete napísať vlastný modul, mali by ste dediť z triedy ModuleType, ktorá
                je potomkom triedy ComplexType. Trieda ModuleType bola zamýšľaná
                na to, aby bola rodičom každého modulu v Heririxe<citation>07</citation>.
            </para>
            <sect2>
                <title>Definícia modulu</title>
                <para>
                    <indexterm><primary>Heritrix</primary></indexterm>Heritrix vie ako pracovať s komplexným typom a ako získať potrebné
                    informácie zadané prostredníctvom užívateľského rozhrania.
                    Aby to <indexterm><primary>Heritrix</primary></indexterm>Heritrix vedel spracovať, nový modul musí splňovať 
                    pár pravidel<citation>07</citation>:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Modul by mal vždy implementovať konštruktor, očakávajúci
                            práve jeden argument <emphasis>name</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Všetky konfigurovateľné atribúty by mali byť definované 
                            v konštruktore daného modulu.
                        </para>
                    </listitem>
                </itemizedlist>
                <sect3>
                    <title>Povinný jedno argumentový konštruktor</title>
                    <para>
                        Všetky moduly musia mať konštruktor prijímajúci práve jeden 
                        argument typu reťazec. Reťazec je použitý na 
                        identifikovanie modulu. V prípade, že nový modul je 
                        rovnakého typu ako existujúci modul, ktorý sa môže vyskytovať 
                        v Heritrixe práve jeden krát, musí sa meno nového modulu 
                        zhodovať s menom existujúceho modulu. To je presne prípad
                        modulu <indexterm><primary>Frontier</primary></indexterm>Frontier, ktorý je v procese plazenia po webových 
                        stránkach použitý práve jeden krát<citation>07</citation>.
                    </para>
                </sect3>
                <sect3>
                    <title>Definovanie atribútov</title>
                    <para>
                        Atribúty v module, ktoré majú byť konfigurovateľné
                        musia byť definované v konštruktore modulu. Pre tento účel 
                        existuje metóda <emphasis>addElementToDefinition(Type type)</emphasis>.
                        <citation>07</citation>:
                    </para>
                </sect3>
            </sect2>
            <sect2>
                <title>Zostavenie jednoduchého modulu</title>
                <para>
                    Zo získaných znalostí už môžme zostaviť jednoduchý modul, ktorý
                    síce nerobí nič užitočné, ale popisuje základné postupy.
                    Postup naprogramovania modulu môžete nájsť v príručke Heritrixu
                    pre vývojarov<citation>07</citation>.
                </para>
                <sect3>
                    <title>Poznámky k pridávaniu modulu do Heritrixu</title>
                    <para>
                        Aby bol nový modul rozpoznaný Heritrixom, je nutné sa o 
                        ňom zmieniť vo vhodnom konfiguračnom súbore (cesta <emphasis>src/conf/modules</emphasis>).
                        Ak je nový pridávaný modul Processor, musíte sa o ňom 
                        zmieniť v súbore <emphasis>Processors.opions</emphasis>. Tento súbor sa pri
                        zostavovaní aplikácke pridá do knižnice Heritrixu <emphasis><indexterm><primary>Heritrix</primary></indexterm>Heritrix.jar</emphasis>
                        <citation>07</citation>.
                    </para>
                    <para>
                        Ak pri pridávaní nového modulu používate nejakú 
                        knižnicu, je nevyhnutné aby bola zmienená v konfiguračných
                        súboroch Heritrixu, ktoré používa zostavovací nástroj <emphasis>Maven 1</emphasis>.
                        Rovnako ak celý nový modul zabalíte 
                        do knižnice <emphasis>jar</emphasis>, stačí ju pridať do adresára 
                        <emphasis>HERITRIX_HOME/lib</emphasis> a zapísať nový modul do konkrétneho
                        konfiguračného súboru v adresári <emphasis>/src/conf/modules</emphasis>.
                    </para>
                </sect3>
            </sect2>
        </sect1>
        <sect1>
            <title>Napísanie modulu <indexterm><primary>Frontier</primary></indexterm>Frontier</title>
            <para>
                Ako bolo spomenuté, <indexterm><primary>Frontier</primary></indexterm>Frontier je prídavný modul, ktorý je zodpovedný
                za rozhodnutie, ktorá URI bude spracovaná ako nasledujúca a kedy.
                <indexterm><primary>Frontier</primary></indexterm>Frontier je taktiež zodpovedný za urdžovanie celkového vnútorného stavu
                procesu plazenia po webových stránkach a je vhodným miestom 
                pre vytváranie reportov a logovanie aktuálneho stavu. <indexterm><primary>Frontier</primary></indexterm>Frontier je
                jeden z najzložitejších modulov. Preto je lepšie pred jeho modifikovaním
                premyslieť všetky ostatné alternatívy, ktoré by sa vyhli úpravam v
                module <indexterm><primary>Frontier</primary></indexterm>Frontier<citation>08</citation>.
            </para>
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" scale="30" fileref="frontier1.png"/>
                </imageobject>
            </mediaobject>
            <para>
                Najdôležitejšie metódy modulu <indexterm><primary>Frontier</primary></indexterm>Frontier sú:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>next(int timeout)</emphasis> -
                        Metóda next je volaná objektom <indexterm><primary>ToeThread</primary></indexterm>ToeThread, predstavujúci vlákno, ktoré
                        má vždy pridelenú práve jednu URI s ktorou pracuje. Pri volaní sa predávajú
                        URI podľa pridelenej priority. To umožňuje, že sa najprv spracujú <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznamy a súbory
                        <emphasis><indexterm><primary>robots</primary></indexterm>robots.txt</emphasis> predtým než sa z konkrétneho hostu získajú nejaké dáta.
                        Následne sa vybraná URI reprezentovaná objetkom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI premení na
                        objekt CrawlURI, ktorý je vhodný na spracovanie procesormi<citation>08</citation>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>schedule(<indexterm><primary>CandidateURI</primary></indexterm>CandidateURI caURI)</emphasis> -
                        Keď je URI spracovaná reťazou procesorov, tak končí v objekte LinksScoper.
                        Všetky URI by tu mali skončiť, aj keď nespĺňali predpoklady na to 
                        aby boli spracované.
                        LinksScoper iteruje cez všetky nové URI nájdené v 
                        kontexte danej CrawlURI a ak vyhovujú požiadavkom skúmanej 
                        oblasti, tak ich prekonvertuje z objektov Link na objekty <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI.
                        Neskôr ich v reťazi <emphasis>Post-processor chain</emphasis> objekt FrontierScheduler 
                        pridá do objetku <indexterm><primary>Frontier</primary></indexterm>Frontier volaním metody <emphasis>schedule(<indexterm><primary>CandidateURI</primary></indexterm>CandidateURI)</emphasis>.
                        Táto metóda zabezpečuje, aby bola každá URI pridaná maximálne raz
                        <citation>08</citation>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>finished(CrawlURI cURI)</emphasis> -
                        Až všetky procesory skončia, tak 
                        vlákno <indexterm><primary>ToeThread</primary></indexterm>ToeThread volá metodu <emphasis>finished(CrawlURI)</emphasis> objektu <indexterm><primary>Frontier</primary></indexterm>Frontier, s 
                        parametrom CrawlURI, ktorá práve prešla celým procesom.
                        Ak sa URI úspešne spracovala, tak sa aktulizujú štatistiky a volá
                        sa metóda <emphasis>stripToMinimal()</emphasis>, ktorá odstráni všetky nepotrebné dáta 
                        zozbierané pri spracovávaní danej CrawlURI<citation>08</citation>.
                    </para>
                </listitem>
            </itemizedlist>
        </sect1>
        <sect1>
            <title>Napísanie modulu Filter</title>
            <para>
                Filtre sú objekty, ktoré vezmú CrawlURI a určia, či spĺňa definované kritéria.
                Ak áno vrátia logickú hodnotu <emphasis>true</emphasis> inak <emphasis>false</emphasis><citation>09</citation>.
            </para>
            <para>
                Filter môže byť použitý na viacerých miestach v procese plazenia webových stránok.
                Najväčšie využitie filterov je v procesoroch na odfiltrovanie nehodiacich sa URI.
                To znamená, že hocijaká URI, ktorá 
                neprejde filtrom v danom procesore tento procesor preskočí. To môže 
                byť užitočné pri zabránení extrahovaní odkazov z dokumentov, ktoré
                pochádzajú zo špecifickej oblasti webových stránok 
                (napr. vulgárne, pornografické stránky)<citation>09</citation>.
            </para>
        </sect1>
        <sect1>
            <title>Napísanie modulu Scope</title>
            <para>
                Instancia objektu CrawlScope definuje, ktoré URI sú v rámci nášho záujmu.
                Je to v podstate filter, ktorý sa pozerá na maximálne množstvo informácií o 
                danej URI, aby určil, či má byť naplánovaná na spracovanie alebo nie.
                Informácia, ktorá určuje z ktorej URI bola aktuálna URI objavená, by
                mala byť braná do úvahy, zatiaľ čo dočasné informácie ako <emphasis><indexterm><primary>robots</primary></indexterm>robots.txt</emphasis> alebo
                história pokusov spracovať rovnakú URI by sa nemali uvažovať. Tieto
                časovo náročné rozhodnutia by sa mali uskutočňovať v inom mieste
                výpočtu<citation>10</citation>.
            </para>
        </sect1>
        <sect1>
            <title>Napísanie modulu Processor</title>
            <para>
                Všetky procesory rozširujú triedu <emphasis>org.archive.framework.Processor</emphasis>. 
                Je to vlastne kompletná trieda a môže byť použitá ako validný procesor,
                ale v skutočnosti nič nerobí.
            </para>
            <para>
                Rozširujúce triedy musia prepísať metódu <emphasis>innerProcess(CrawlURI)</emphasis>, aby 
                pridali potrebnú funkcionalitu. Táto metóda je zavolaná 
                nad každou URI ktorá sa spracováva.
            </para>
            <para>
                Metóda <emphasis>innerProcess</emphasis> používa objekt CrawlURI, ktorý je predaný ako parameter
                a objekt HttpRecorder, ktorý je zabalený v objekte CrawlURI.
            </para>
            <para>
                Objekty Fetcher (FetchHTTP, FetchFTP, ...) získajú relevantný dokument
                a zapíšu jeho obsah do objektu HttpRecorder. Objekty Extractor 
                (HTMLExtractor, CSSExtractor, ...) čítajú objekt HttpRecorder a 
                pridávajú objevené odkazy do zoznamu odkazov nájdených na danej CrawlURI
                <citation>11</citation>.
            </para>
            <para>
                Niekoľko iných metód môže byť prepísaných na špeciálne účely:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>initialTasks()</emphasis> - 
                        Táto metóda bude volaná až bude nastavený celý proces plazenia, ale predtým než
                        bude nejaká URI spracovaná. Je to vlasnte inicializačný kód, ktorý
                        musí byť spustený práve jeden krát pri štarte plazenia webu<citation>11</citation>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>finalTasks()</emphasis> - 
                        Táto metóda bude zavolaná po tom ako bude spracovaná posledná URI.
                        Je to na samom konci plazenia webu a znamená to, že proces 
                        je normálne ukončený. V podstate je to miesto, kde sa môže
                        napísať finalizačný kód<citation>11</citation>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>report()</emphasis> - 
                        Táto metóda vracia reťazec, ktorý obsahuje ľudsky čitateľnú správu o
                        stave alebo progrese procesu plazenia webu. Táto správa je 
                        prístupná cez webové uživateľské rozhranie. Procesor by 
                        mohol informovať o počte CrawlURI, ktoré spracoval alebo
                        počte odkazov, ktoré objavil <citation>11</citation>.
                    </para>
                </listitem>
            </itemizedlist>
            <sect2>
                <title>Pristupovanie a aktualizovanie CrawlURI</title>
                <para>
                    Objekt CrawlURI obsahuje nasledujúce metódy:<citation>11</citation>
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis>getAlist()</emphasis> - 
                            Táto metóda vracia objekt <emphasis>AList</emphasis> danej CrawlURI.
                            <emphasis>AList</emphasis> je v podstate mapa do ktorej si môžeme
                            uložiť hocijaké informácie, ktoré potrebujeme použiť pri spracovávaní.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>setHttpRecorder(HttpRecorder)</emphasis> - 
                            Nastavuje HttpRecorder, ktorý obsahuje stiahnutý obsah zo serveru. Metóda je zvyčajne 
                            vykonaná nejakým procesorom z reťaze <emphasis>Fetch processing chain</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>getHttpRecorder()</emphasis> - 
                            Metóda, ktorá získa stiahnutý obsah.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>getContentSize()</emphasis> - 
                            Ak bol dokument úspešne stiahnutý, táto metóda vráti jeho dĺžku v bytoch.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis>getContentType()</emphasis> - 
                            Mime type stiahnutého obsahu.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>HttpRecorder</title>
                <para>
                    HttpRecorder je pripojený ku každej CrawlURI, ktorá bola úspešne stiahnutá pomocou FetchHTTP procesoru.
                    Procesory, ktoré sa zaujímajú o textový obsah stiahnutej CrawlURI k nemu môžu pristupovať pomocou
                    metódy <emphasis>getReplayCharSequence()</emphasis>, vracajúcej objekt <emphasis>java.lang.CharSequence</emphasis>.
                </para>
            </sect2>
            <sect2>
                <title>Poznámky k písaniu modulu Processor</title>
                <para>
                    Pre každý procesor je vytvorená iba jedna instancia počas celého
                    procesu definovanej úlohy <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis>. 
                    Keďže je <indexterm><primary>Heritrix</primary></indexterm>Heritrix multivláknová aplikácia, 
                    musí byť procesor napísaný správne aby nedochádzalo ku konfliktom<citation>11</citation>.
                </para>
            </sect2>
        </sect1>
    </chapter>
    <chapter>
        <title>Návrh a Integrácia</title>
        <sect1>
            <title>Integrácia</title>
            <para>
                Podľa popisu funkčnosti Heritrixu je nutné vhodne integrovať systém <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer tak,
                aby sme dosiahli požadovaných výsledkov. Modul <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer musí každopádne
                spracovávať každú URI, ktorá prejde procesom plazenia webu. Preto je 
                potrebné integrovať <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer do niektorého z modulov.
                Vhodná možnosť je navrhnúť a naimplementovať modul <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer, vo forme
                knižnice <emphasis>.jar</emphasis>, ktorá bude poskytovať definované rozhranie, s ktorým 
                bude niektorý z modulov Heritrixu spolupracovať a používať jeho služby. Systém
                <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer by mal vziať na vstupe URI, o ktorej na základe
                svojich funkcií a definovaných požiadavkov určí, či je česká alebo nie.
                Teraz ostávalo zistiť, ktorý modul bude
                ten najvhodnejší pre integráciu s WebAnalyzerom. 
            </para>
            <para>
                <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer by mal pri spracovávaní URI dostať na vstup 
                konkrétnu URI a čo najviac informácií, ktoré <indexterm><primary>Heritrix</primary></indexterm>Heritrix pri 
                jej spracovávaní získal.
            </para>
            <para>
                Integrácia s modulom <indexterm><primary>Frontier</primary></indexterm>Frontier neprichádza do úvahy, pretože
                <indexterm><primary>Frontier</primary></indexterm>Frontier má prístup k URI, buď na samom začiatku spracovania
                alebo na úplnom konci. Ani jedna z ponúkaných možností nie je
                vyhovujúca.
                Pred samotným spracovaním URI <indexterm><primary>Heritrix</primary></indexterm>Heritrix pozná 
                minimum informácií, medzi ktoré patrí názov samotnej URI, názov
                URI na ktorej bola aktuálna URI objavená a nejaké informácie o 
                servery, na ktorom sa URI nachádza. V tomto stave nemáme prístupný
                dokonca ani textový obsah, ktorý získajú až procesory FetchHTTP 
                z reťaze <emphasis>Fetch processing chain</emphasis>.
                Naopak na úplnom konci spracovania <indexterm><primary>Heritrix</primary></indexterm>Heritrix zistil o URI maximálne 
                množstvo informácií, ktoré by mohli byť pre <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer hodnotné.
                Keby sme nasadili <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer v tomto bode a identifikovali URI, 
                tak by sme prišli o možnosť archivovania českých URI.
                <indexterm><primary>archivácia</primary></indexterm>Archivácia sa totiž vykonáva procesorom ARCWriterProcessor, ktorý vstupuje
                do činnosti skôr ako skončí URI v objekte <indexterm><primary>Frontier</primary></indexterm>Frontier.
            </para>
            <para>
                Z predchádzajúcich úvah vyplýva, že ak chceme využiť funkcionalitu
                archivovania, ktorú <indexterm><primary>Heritrix</primary></indexterm>Heritrix ponúka, musíme <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer umiestniť niekde
                pred procesorom ARCWriterProcessor, ktorý archivuje spracovávané URI. 
            </para>
            <para>
                Následne sa ponúka možnosť integrovať <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer do modulu Filter, ktorý pri
                spracovávaní každej URI určuje, či spĺňa definované kritéria alebo nie. Filter
                môže byť použitý na viacerých miestach procesu spracovania URI, takže by nebol 
                problém umiestniť ho tesne pred modul archivovania a pomocou WebAnalyzeru
                určit, či je aktuálna URI česká alebo nie. Podľa tohoto rozhodnutia by 
                ju potom mohol následujúci procesor archivovať. Pokus však ukázal, že
                ani filter nie je vhodným modulom. <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer pri analyzovaní používa viacero
                projektov a knižníc, s ktorými spolupracuje. Funkcionalita týchto podsystémov
                systému WebAnalyzer vyžaduje, aby bol <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer pred samotným spustením
                nainicializovaný. Tým pádom je nutné vždy pred jeho používaním zavolať jeho 
                metodu <emphasis>initializeWebAnalyzer()</emphasis>, ktorá zabezpečí, že sa otvoria a nainicializujú
                všetky spojenia k externým súborom, databázam a indexom, ktoré <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer používa.
                Taktiež je nutné pri skončení používania zavolať metodu <emphasis>closeWebAnalyzer()</emphasis>, ktorá
                tieto spojenia opäť uzavrie. To znamená, že v čase keď začna filter pracovať, 
                <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer už musí byť nainicializovaný. Bola tu možnosť inicializovať <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer
                v čase vytvárania objektu <indexterm><primary>Frontier</primary></indexterm>Frontier, ale nakoniec sa tento postup ukázal zbytočne zložitý.
            </para>
            <para>
                Ďalšia možnosť bola integrácia s modulom Scope. Modul Scope rozhoduje, ktorá
                URI je v oblasti záujmu a ktorá nie. Je to v podstate obdoba modulu Filter.
                Scope sám o sebe poskytoval 
                metódy, <emphasis>initialize()</emphasis> a <emphasis>finalize()</emphasis>, ktoré sa dali preťažiť a mohol by sa v nich
                inicializovať a zatvárať objekt <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. Taktiež umiestnenie modulu pred
                procesorom na archiváciu vyhovovalo. Modul Scope sa zdal vyhovujúcim, ale na základe 
                vyjadrenia <indexterm><primary>Internet Archive</primary></indexterm>Internet Archive, ktorý mal v pláne modul Scope úplne preorganizovať a 
                zrefaktorovať v nadchádzajúcej verzii Heritrixu, sme skúsili ešte inú možnosť.
            </para>
            <para>
                Poslednou a konečnou možnosťou bola integrácia do modulu Processor, ktorá sa 
                ukázala byť najviac vyhovujúcou možnosťou. Procesor sa vyskytuje v niekoľkých vartiantách
                ako sme spomenuli v sekcii Processor. <indexterm><primary>Heritrix</primary></indexterm>Heritrix definuje niekoľko 
                reťazí procesorov. Pre systém <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer je najvýhodnejšie umiestniť procesor 
                do reťaze <emphasis>Extractor processing chain</emphasis>. Prvé dve reťaze <emphasis>Pre-fetch processing chain</emphasis>
                a <emphasis>Fetch processing chain</emphasis> neboli vyhovujúce pretože v tom čase ešte nemáme prístupný 
                textový obsah URI, ktorý môže <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer použiž na analýzu textu. Textový 
                obsah URI je dostupný až po skončení reťaze <emphasis>Fetch-processing chain</emphasis>. Nasledujúca
                reťaz <emphasis>Extractor processing chain</emphasis> obsahuje procesory nazvané Extractor, ktorých
                hlavná úloha je extraktovať zo získaného textu URI všetky odkazy. Nachádzajú sa
                tam extractory typu ExtractorHTML, ExtractorCSS a podobné. Keďže kolekcia
                objavených odkazov mohla byť ďalšou hodnotnou informáciou pre <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer, bolo
                nutné umiestniť <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer do procesu, ktorý by sa nachádzal na samom konci
                tejto reťaze, keď už budú objavené všetky odkazy.
            </para>
            <para>
                Nasledujúca reťaz po <emphasis>Extractor-processing chain</emphasis> 
                je <emphasis>Write/Index-processing chain</emphasis>, ktorej
                hlavnou úlohou je archivovať URI. Úplne posledná reťaz procesorov je <emphasis>Post-processing
                chain</emphasis>, ktorá spracováva objavené odkazy a podľa definovaných kritérií ich 
                ďalej zaraďuje do procesu alebo vyhadzuje.
            </para>
            <para>
                Processor Extractor rovnako ponúka metódy <emphasis>initialize()</emphasis> a 
                <emphasis>finalize()</emphasis>, ktoré
                sa volali vždy práve jeden krát počas celého procesu plazenia webu. Tieto
                instancie procesorov sú potom používané jednotlivými vláknami <indexterm><primary>ToeThread</primary></indexterm>ToeThread.
                V týchto metódach je možné jednoducho
                zavolať inicializačnú aj finalizčnú metódu WebAnalyzeru, čím sa nám zaistí, že
                <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer sa správne nainicializuje aj uzavrie spolu s procesorom, v ktorom 
                bude integrovaný. Hlavná metóda procesoru <emphasis>innerProcess(CrawlURI)</emphasis>
                bola ideálnym kandidátom na volanie služieb poskytovaných
                systémom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. 
            </para>
            
            <sect2>
                <title><indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer</title>
                <para>
                    Integračný procesor sme umiestnili do reťaze <emphasis>Extractor processing chain</emphasis>.
                    Extractor sa nazýva <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer a je to potomok triedy Extractor, ktorá
                    je zas potomkom triedy Processor. <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer bude 
                    jediný modul Heritrixu, ktorý bude priamo pracovať so systémom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                    Systém WebAnalyzér ponúka v podstate 4 metódy, ktoré používa <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer.
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis>initialize()</emphasis> -
                            Metóda, ktorá inicializuje instanciu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. 
                            Pre celý proces plazenia webu sa použije práve jedna instancia WebAnalyzeru.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>isContetTypeText(curiName)</emphasis> -
                            Metóda, ktora zistí <indexterm><primary>Mime Type</primary></indexterm>Mime Type predanej URI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>run(urlName, urlContent, urlOutlinks, contentType)</emphasis> -
                            Metóda, ktorá spustí analýzu konkrénej URI. <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer využíva 
                            pri analýze názov URI, textový obsah URI, objavené odkazy a <indexterm><primary>Mime Type</primary></indexterm>Mime Type.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>close()</emphasis> -
                            Finalizačná metóda, ktorá uzavrie všetky spojenia používané systémom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Pri testovaní tejto verzie sme dosiahli, že každá jedna URI bola
                    analyzovaná našim WebAnalyzerom. Na základe rozhodnutia WebAnalyzeru
                    sme v procesore <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer nastavili, ktorá URI sa má
                    archivovať a ktorá má naopak procesor na archivovanie preskočiť.
                    Tým sme dokázali archivovať všetky URI, ktoré <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer identifikoval
                    ako české.
                </para>
            </sect2>
            <sect2>
                <title>Nedostatky prvej verzie integrácie WebAnalyzeru</title>
                <para>
                    Počas testovania prvej verzie sa objavilo mnoho nedostatkov,
                    ktoré si vyžadovali mnoho práce na integrácií.
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis><indexterm><primary>archivácia</primary></indexterm>archivácia obrázkov</emphasis> - 
                            Pri archivácií českej stránky sa nearchivovali obrázky
                            a css štýly, čím bola stránka veľmi ochudobnená. Každý obrázok
                            a hociktorý iný zdroj na stránke je samostatnou URI adresou
                            spracovávanou nezávisle na ostatných URI adresách. Preto je nutné
                            aby si systém pamätal, ktoré URI sú obrázky z už archivovaných 
                            českých stránok a archivoval ich tiež.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis><indexterm><primary>archivácia</primary></indexterm>archivácia odkazov</emphasis> - 
                            Podobný problém ako s obrázkami vznikol aj pri odkazoch. 
                            Pri identifikácií vznikla požiadavka aby systém okrem 
                            samotnej českej stránky archivoval automaticky aj všetky
                            odkazy, ktoré sa na tejto stránky vyskytujú a to do určitej úrovne.
                            To znamená, že bolo nutné definovať do akej hĺbky od českej
                            stránky sa majú referencované stránky automaticky archivovať.
                            Tieto stránky by totiž mohli byť hodnotným zdrojom odkazovaným z českej stránky.
                            Opäť bolo nutné aby si systém pamätal, z ktorej rodičovskej URI bola
                            aktuálna URI objavená a či tá rodičovská URI bola identifikovaná
                            ako česká.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>analyzovanie binárneho obsahu</emphasis> - 
                            Počas testovania záznamy z logu ukazovali, že <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer analyzuje
                            aj binárny obsah, čo je nežiadúce, pretože textová analýza 
                            binárnych dokumentov nedáva zmysel. Napriek tomu, že v procesore <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer 
                            bolo jasne definované, aby <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer analyzoval iba dokumenty 
                            s textovým obsahom, sa v logu objavili analýzy dokumentov
                            rôzneho <indexterm><primary>Mime Type</primary></indexterm>Mime Type (audio, video, image, application).
                            Bolo teda nutné precízne identifikovať typ dokumentu aby sa
                            predišlo nezmyslených analýzam, ktoré boli dôvodom mnohých
                            ďalších chýb.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>výnimka OutOfMemory</emphasis> - 
                            Počas testovania Heritixu sa mnoho krát objavila výnimka 
                            <emphasis>java.lang.OutOfMemory</emphasis>. 
                            Z logu sa dalo vyčítať že dôvodom bola práve analýza
                            textového obsahu rôznych dokumentov typu audio a video, ktorých
                            veľkosť bola v stovkách MB. Pri analýze sa vytvárali objety
                            <emphasis>java.lang.String</emphasis> ktoré zaberali mnoho pamäte a spôsobovali
                            výnimku <emphasis>java.lang.OutOfMemory</emphasis>. To bol ďalší dôvod aby bola riadne zabezpečená
                            identifikácia typu dokumentu.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>archivovanie <indexterm><primary>DNS</primary></indexterm>DNS záznamov</emphasis> - 
                            Predtým než sa nejaká stránka stiahne zo serveru, tak sa spracuje
                            odpvedajúci <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznam. Tento 
                            <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznam <indexterm><primary>Heritrix</primary></indexterm>Heritrix automatický archivuje, 
                            vďaka čomu sme mali v ARC súboroch obrovské množstvo zbytočných DNS záznamov.
                            My však chceme archivovať len tie <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznamy, ktoré sa spájajú
                            s českými stránkami. Tohoto stavu je ale ťažké dosiahnuť, pretože
                            v čase keď prebieha analýza stránky je už odpvedajúci <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznam archivovaný.
                            Riešením by bola dodatočná <indexterm><primary>archivácia</primary></indexterm>archivácia <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznamov. Dočasné riešenie
                            je nearchivovať žiadne <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznamy, pretože nemajú 
                            vpliv na sprístupnenie archivovaných stránok.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Integrácia pomocou viacerých modulov</title>
                <para>
                    Na základe nedostatkov z prvej otestovanej verzie, vznikli ďalšie
                    požiadavky, ktoré by mal systém splňovať. Na základe nových
                    požiadavkov vznikol use case diagram <xref linkend="img2"/>, ktorý popisuje
                    integráciu modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer so systémom <indexterm><primary>Heritrix</primary></indexterm>Heritrix. Integrácia
                    je realizovaná pomocou modulov <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, 
                    <indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer a ARCWriterProcessorWebAnayzer, ktoré
                    sú súčasťou Heritrixu. Procesor <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer je jediný, 
                    ktorý používa rozhranie modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                </para>
                <figure id="img2">
                    <title>Use case diagram integrácie systému <indexterm><primary>Heritrix</primary></indexterm>Heritrix a <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</title>                    
                    <mediaobject>
                        <imageobject>
                            <imagedata format="PNG" scale="50" fileref="usecase1.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>                
                <sect3>
                    <title>Archivovanie <indexterm><primary>DNS</primary></indexterm>DNS záznamov</title>
                    <para>
                        Pred spracovaním ľubovoľnej stránky z konkrétneho hostu
                        sa najprv získa <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznam. Ten je spracovaný procesorom
                        PreconditionEnforcer, ktorý overuje či sú splnené všetky
                        požiadavky pre nasledujúce spracovanie danej URI ( napr.
                        <emphasis><indexterm><primary>DNS</primary></indexterm>DNS, <indexterm><primary>robots</primary></indexterm>robots.txt</emphasis>). 
                        ARCWriterProcessor tieto <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis> záznamy
                        automaticky archivuje.
                        Pre nás je však zbytočné archivovať všetky <indexterm><primary>DNS</primary></indexterm>DNS záznamy. 
                        Tento problém 
                        zatiaľ nemá vysokú prioritu a preto použijeme vlastný
                        procesor <indexterm><primary>ARCWriterProcessorWebAnalyzer</primary></indexterm>ARCWriterProcessorWebAnalyzer, ktorý jednoducho
                        nebude archivovať <indexterm><primary>DNS</primary></indexterm>DNS záznamy.
                    </para>
                </sect3>
                <sect3>
                    <title>Výnimka OutOfMemory a analyzovanie binárneho obsahu</title>
                    <para>
                        Pri spracovaní dochádzalo pomerne často k výnimke
                        <emphasis>java.lang.OutOfMemory</emphasis> spôsobenej v 
                        dôsledku analyzovania binárnych dokumentov.
                    </para>
                    <para>
                        Staré typy serverov, ktoré nevedeli rozoznať typ
                        dokumentu automaticky nastavovali pre tieto dokumenty 
                        <emphasis>contentType = text/plain</emphasis>. V skutočnosti to však mohol
                        byť dokument s MimeType typu video, audio alebo application.
                        Pri textovej analýze takýchto falošných <quote>textových</quote> dokumentov,
                        modulom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer, sa vytvárajú 
                        enormne veľké objekty <emphasis>java.lang.String</emphasis>, ktoré spôsobujú
                        výnimku <emphasis>java.lang.OutOfMemory</emphasis>.
                    </para>
                    <para>
                        <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer kontroluje MimeType všetkých dokumentov
                        pred tým než začne analýza modulom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. Funkčnosť
                        Heritrixu, ktorú používa <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer na určenie 
                        MimeType dokumentu evidentne nie je dostatočná a preto 
                        bolo nutné vytvoriť podsystém MimeTypeDetector, ktorý 
                        identifikuje správny MimeType dokumentu. MimeTypeDetector
                        je nutné umiestniť do procesoru <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer pred
                        spustením modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer, aby sa predišlo analýzam
                        binárnych dokumentov.
                    </para>
                </sect3>
                <sect3>
                    <title><indexterm><primary>archivácia</primary></indexterm>Archivácia odkazov a obrázkov</title>
                    <para>
                        Predchádzajúca verzia systém archivuje len tie URI, ktoré 
                        <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer identifikoval ako české. Všetky ostatné
                        URI (URI obrázkov, css  súborov a iných odkazov českej
                        stránky) sa nearchivujú. My však potrebujeme archivovať
                        nielen zdroje českej stránky (obrázky, css) ale aj 
                        odkazy vedúce z tejto stránky a to do určitej úrovne. Odkazy vedúce
                        z českej stránky pravdepodobne nesú hodnotné informácie asociované
                        s odpovedajúcou českou stránkou.
                    </para>
                    <figure id="img3">
                        <title>Archivovanie odkazov do hĺbky 2</title>                    
                        <mediaobject>
                            <imageobject>
                                <imagedata format="PNG" scale="58" fileref="depth.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>
                        Obrázok ukazuje strom, ktorého koreň je česká stránka
                        a jej listy sú odkazy z tejto stránky. Pri definovanej 
                        hĺbke 2 by sa mali všetky odkazy, obrázky a iné zdroje 
                        vedúce z českej stránky automaticky archivovať do
                        tejto hĺbky. Pri archivovaní odkazov 2. úrovne
                        však budú tieto URI opäť bez obrázkov, css a iných zdrojov.
                        Preto musíme archivovať aj 3. úroveň, ale okrem html dokumentov.
                        Tým zabezpečíme, že každá archivovaná
                        stránka bude mať v <indexterm><primary>ARC</primary></indexterm>ARC súboroch aj svoje obrázky, css štýly, 
                        audio, video nahrávky a iné zdroje. Definovanie hĺbky
                        môže nastaviť užívateľ pred spustením celého procesu.
                    </para>
                    <para>
                        <indexterm><primary>archivácia</primary></indexterm>Archivácia odkazov z českých stránok do určitej hĺbky 
                        sa dala zrealizovať novým modulom <indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer a odpovedajúcimi zmenami
                        v procesore <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer tak, aby mohli moduly vzájomne spolupracovať.
                        Veľkou pomôckou boli objekty CrawlURI a <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI, 
                        ktoré obsahujú objekt AList, čo je zoznam objektov pridružených k
                        danej URI. Do tohto zoznamu je možné pridať hocijaký príznak (objekt), ku 
                        ktorému môžeme pristupovať v ľubovoľnom module. Na základe týchto
                        príznakov si <indexterm><primary>Heritrix</primary></indexterm>Heritrix môže zapamätať, ktoré URI sú české, 
                        ktoré URI sú validnými odkazmi z českých stránok alebo
                        URI, ktoré predstavujú obrázky, css štýly či iné zdroje asociované s
                        českými stránkami. Týmto spôsobom môžeme všetky URI odkazované z 
                        českej stránky archivovať a to do určitej úrovne, ktorú
                        si môže užívateľ sám zvoliť.
                    </para>
                    <para>
                        Modul <indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer je potomkom modulu 
                        LinksScoper, ale dopĺňa funkcionalitu na spracovanie 
                        odkazov z českých stránok.
                    </para>
                    <para>
                        Postup archivovania odkazov z českých stránok: <xref linkend="img1"/>
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis>1. <indexterm><primary>Frontier</primary></indexterm>Frontier next(int Timeout)</emphasis> - 
                                Každá CrawlURI vstupuje do procesu z objektu <indexterm><primary>Frontier</primary></indexterm>Frontier.
                                Zavolaním jeho metody next() si vlákno <indexterm><primary>ToeThread</primary></indexterm>ToeThread vezme
                                nasledujúcu CrawlURI, ktorá potom putuje procesormi.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis>2. <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer innerProcess(CrawlURI curi)</emphasis> - 
                                Keď CrawlURI dosiahne procesor <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, tak sa zisťuje
                                či má nastavený nejaký príznak, podľa ktorého sa odvíja ďalšie 
                                spracovanie.
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>2.1 CrawlURI NO FLAG</emphasis> - 
                                        CrawlURI nemá nastavený žiadny príznak. Bude následne 
                                        identifikovaný jej MimeType pomocou modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>2.2 CrawlURI FLAG=valid_link, DEPTH=x</emphasis> - 
                                        CrawlURI má nastavený príznak <emphasis>valid_link</emphasis>, ktorý
                                        definuje, že táto URI bola odkazom z českej stránky a má sa 
                                        okamžite archivovať. Nie je nutné robiť jej analýzu. Putuje rovno do
                                        procesoru ARCWriterProcesorWebAnalyzer, ktorý ju archivuje. Príznak
                                        <emphasis>DEPTH=x</emphasis>, definuje do akej hĺbky sa majú odkazy
                                        nájdené z tejto URI automaticky archivovať. Táto hĺbka sa znižuje s 
                                        každou archivovanou úrovňou.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>2.3 CrawlURI FLAG=archive_bin_link, DEPTH=0</emphasis> - 
                                        CrawlURI s príznakom <emphasis>archive_bin_link</emphasis> definuje, že
                                        táto URI je odkazom z českej stránky, ale v stromovej štruktúre
                                        predstavuje list (<xref linkend="img3"/>). To znamená, že sa vykonala
                                        <indexterm><primary>archivácia</primary></indexterm>archivácia všetkých uzlov vedúcich z českej stránky (koreňa)
                                        do definovanej hĺbky. V listoch však môžu existovať odkazy na obrázky, 
                                        css štýly a iné zdroje, ktorý by chýbali v už archivovaných stránakch.
                                        Preto je nutné z týchto listov archivovať všetky dokumenty okrem tých, 
                                        ktorých <emphasis>content type</emphasis> je <emphasis>text/html</emphasis>. 
                                        Týmto dosiahneme archiváciu obrázkov a css štýlov.
                                    </para>
                                    <itemizedlist>
                                        <listitem>
                                            <para><emphasis>2.3.1 CrawlURI Content type=text/css, DEPTH=0</emphasis> - 
                                                Ak je CrawlURI s príznakom <emphasis>archive_bin_link</emphasis> dokument
                                                typu css, tak sa automaticky archivuje. Okrem toho sa pre túto CrawlURI
                                                nastaví príznak <emphasis>valid_link</emphasis> a <emphasis>depth=0</emphasis>.
                                                Tým sa zabezpečí že budú archivované aj obrázky nachádzajúce sa v css dokumente, 
                                                ktoré by inak v <indexterm><primary>ARC</primary></indexterm>ARC súboroch chýbali.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>2.3.2 CrawlURI Content type=other</emphasis> - 
                                                CrawlURI s nastaveným príznakom <emphasis>archive_bin_link</emphasis>, ktorých MimeType
                                                je iný ako <emphasis>text/html</emphasis> sa taktiež automaticky archivujú. 
                                                Tým dosiahneme archiváciu obrázkov
                                                a iných multimediálnych dokumentov, ktoré sa nachádzajú na už archivovaných
                                                stránkach.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>2.3.2 CrawlURI Content type=other</emphasis> - 
                                                CrawlURI s nastaveným príznakom <emphasis>archive_bin_link</emphasis>, ktorých MimeType
                                                je <emphasis>text/html</emphasis> sa už archivovať nebudú a rovnako sa nebudú nastavovať žiadne príznaky
                                                pre odkazy na tejto stránke. To by už znamenalo presiahnutie definovanej hĺbky zadanej
                                                užívateľom.
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>                            
                        </listitem>
                        <listitem>
                            <para><emphasis>3. MimeTypeDetector isContentTypeText(curi.getName())</emphasis> - 
                                CrawlURI, ktorá nemala nastavený žiadny príznak je identifikovaná modulom
                                MimeTypeDetector, ktorý je súčasťou modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. Na základe 
                                získaného MimeType sa CrawlURI vydá dvomi rôznymi cestami.
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>3.1 CrawlURI Content type=other</emphasis> - 
                                        CrawlURI, ktorej identifikovaný MimeType bol iný ako <emphasis>text</emphasis> sa nebude analyzovať. 
                                        Pravdepodobne 
                                        sa jedná o URI s binárnym obsahom, ktorej analýza nemá zmysel. 
                                        CrawlURI postupuje do reťazca <emphasis>Post-processing chain</emphasis>.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>3.2 CrawlURI Content type=text</emphasis> - 
                                        CrawlURI, ktorej identifikovaný MimeType bol <emphasis>text</emphasis> bude spracovaná modulom 
                                        <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para><emphasis>4. <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer run(curiName, outlinks, contetType, content)</emphasis> - 
                                CrawlURI, ktoré sa dostali do tejto vetvy sú spracované WebAnalyzerom. Ten na základe parametrov
                                o danej CrawlURI identifikuje či sa jedná o českú URI alebo nie.
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>4.1 CrawlURI NO FLAG</emphasis> - 
                                        CrawlURI, ktorá nebola WebAnalyzerom identifikovaná ako česká postupuje do
                                        reťaze <emphasis>Post-processing chain</emphasis>. Nenastavuje sa jej žiadny príznak.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>4.2 CrawlURI FLAG=valid_URI, DEPTH=x</emphasis> - 
                                        CrawlURI, identifikovaná ako česká bude následne archivovaná. Predtým sa jej však nastaví
                                        príznak <emphasis>valid_URI</emphasis> a <emphasis>depth=x</emphasis>. Hodnotu pre hĺbku získa 
                                        <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer z externého súboru, ktorý nastavuje užívateľ pred spustením. 
                                        Tým zabezpečíme 
                                        aby si systém pamätal, do akej hĺbky má rekurzívne nájdené odkazy automaticky archivovať.
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para><emphasis>5. <indexterm><primary>ARCWriterProcessorWebAnalyzer</primary></indexterm>ARCWriterProcessorWebAnalyzer innerProcess(CrawlURI curi)</emphasis> - 
                                Procesor <indexterm><primary>ARCWriterProcessorWebAnalyzer</primary></indexterm>ARCWriterProcessorWebAnalyzer archivuje každú CrawlURI, ktorá sa mu predá ako parameter s 
                                výnimkou CrawlURI typu <emphasis><indexterm><primary>DNS</primary></indexterm>DNS</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis>6. <indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer innerProcess(CrawlURI curi)</emphasis> - 
                                Procesor <indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer spracuje všetky odkazy nájdené na danej CrawlURI predanej ako parameter.
                                Podľa príznaku CrawlURI sa vytvoria ekvivalentné <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI z objavených odkazov a nastavia sa im príslušné
                                príznaky.
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>6.1 CrawlURI NO FLAG</emphasis> - 
                                        CrawlURI, ktorá nemá nastavený žiadny príznak sa spracuje klasickým spôsobom
                                    </para>
                                    <itemizedlist>
                                        <listitem>
                                            <para><emphasis>6.1.2 createCandidateURI()</emphasis> - 
                                                Vytvorí sa objekt <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>6.1.3 <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI NO FLAG</emphasis> - 
                                                <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI, ktorej rodičovská stránka CrawlURI nemá žiadny príznak 
                                                pokračuje klascikým spôsobom v spracovaní reťazou <emphasis>Post-processing chain</emphasis>.
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                                <listitem>
                                    <para><emphasis>6.2 CrawlURI FLAG=valid_link, DEPTH=x</emphasis> - 
                                        CrawlURI, ktorá ma nastavený príznak <emphasis>valid_link</emphasis> sa ďalej spracuje podľa toho
                                        aká je hodnota príznaku <emphasis>depth</emphasis>.
                                    </para>
                                    <itemizedlist>
                                        <listitem>
                                            <para><emphasis>6.2.1. createCandidateURI()</emphasis> - 
                                                Vytvorí sa objekt <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>6.2.2 <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI FLAG=valid_link, DEPTH=x-1</emphasis> - 
                                                CrawlURI, ktorej príznak <emphasis>depth=x</emphasis> má hodnotu x > 0. Objektom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                                                vytvoreným z odkazov sa nastaví príznak <emphasis>valid_link</emphasis> a hodnota príznaku
                                                <emphasis>depth</emphasis> bude <emphasis>depth=x-1</emphasis>. Tým sa zabezpečí, že sa 
                                                archivujú validné odkazy do definovanej hĺbky. Po znížení hĺbky na x=0 sa objektom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                                                nastaví príznak <emphasis>archive_bin_link</emphasis>, ktorý zaistí, že sa z týchto odkazov
                                                archivujú len obrázky, css štýly a iné zdroje umiestené na predtým archivovanej stránke.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>6.2.3 <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI FLAG=archive_bin_link</emphasis> - 
                                                CrawlURI s nastaveným príznakom<emphasis>depth=0</emphasis>. Objektom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                                                vytvoreným z takýchto odkazov sa nastaví príznak <emphasis>archive_bin_link</emphasis>.
                                            </para>
                                        </listitem>                                        
                                    </itemizedlist>
                                </listitem>
                                <listitem>
                                    <para><emphasis>6.3 CrawlURI FLAG=valid_URI, DEPTH=x</emphasis> - 
                                        CrawlURI, ktorá ma nastavený príznak <emphasis>valid_URI</emphasis> sa ďalej spracuje podľa toho
                                        aká je hodnota príznaku <emphasis>depth</emphasis>.
                                    </para>
                                    <itemizedlist>
                                        <listitem>
                                            <para><emphasis>6.3.1. createCandidateURI()</emphasis> - 
                                                Vytvorí sa objekt <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>6.3.2 <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI FLAG=valid_link, DEPTH=x-1</emphasis> - 
                                                CrawlURI, ktorej príznak <emphasis>depth=x</emphasis> má hodnotu x > 0. Objektom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                                                vytvoreným z odkazov sa nastaví príznak <emphasis>valid_link</emphasis> a hodnota príznaku
                                                <emphasis>depth</emphasis> bude <emphasis>depth=x-1</emphasis>. 
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>6.3.3 <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI FLAG=archive_bin_link</emphasis> - 
                                                CrawlURI s nastaveným príznakom <emphasis>depth=0</emphasis>. Objektom <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI
                                                vytvoreným z takýchto odkazov sa nastaví príznak <emphasis>archive_bin_link</emphasis>.
                                            </para>
                                        </listitem>                                        
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para><emphasis>7. Post-processor chain</emphasis> - 
                                Každá CrawlURI musí prejsť touto reťazou procesorov.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis>8. <indexterm><primary>Frontier</primary></indexterm>Frontier schedule(<indexterm><primary>CandidateURI</primary></indexterm>CandidateURI caURI)</emphasis> - 
                                Zaradí každú <indexterm><primary>CandidateURI</primary></indexterm>CandidateURI do kolekcie URI čakajúcich na spracovanie podľa priority.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis>9. <indexterm><primary>Frontier</primary></indexterm>Frontier finished(CrawlURI curi)</emphasis> - 
                                Potom ako všetky procesory skončia, <indexterm><primary>ToeThread</primary></indexterm>ToeThread volá metodu <emphasis>finish(CrawlURI curi)</emphasis> objektu <indexterm><primary>Frontier</primary></indexterm>Frontier.
                            </para>
                        </listitem>
                    </itemizedlist>
                    <figure float="1" id="img1"> 
                        <title>Diagram popisujúci spracovanie URI pomocou integrácie viacerých modulov</title>                    
                        <mediaobject>
                            <imageobject>
                                <imagedata scale="60" fileref="archiveLinks.png" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>                    
                </sect3>
            </sect2>
        </sect1>
    </chapter>
    <chapter>
        <title><indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer - návrh a implementácia</title>
        <para>
            V kapitole o integrácií modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer so systémom <indexterm><primary>Heritrix</primary></indexterm>Heritrix, 
            sme spomínali, že systém<indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer bude klasická knižcnica, ktorá bude
            poskytovať rozhranie, používané v procesore <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer.
            Zbytok funcionality celého systému na identifikovanie a rozpoznanie
            webu mimo národnej domény je zahrnutý v integračných moduloch.
            Teraz sa zameriame na návrh tried systému <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
        </para>
        <para>   
            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer sme navrhli tak, aby mohol byť použitý ako samostatná
            komponenta, ktorá bude identifikovať URI podľa nastavených požiadavkov.
            Súčasťou je súbor <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis>, v ktorom môže užívateľ nastaviť
            aké rozhodovacie kritéria sa majú použiť a za akých podmienok sa má
            stránka identidikovať ako validná.
        </para>
        <para>
            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer je navrhnutý tak, aby bolo jednoduché pridať nové
            rozhodovacie kritérium do kódu. Poskytuje rozhrania, ktoré musí
            nové kritérium implementovať.
        </para>
        <sect1>
            <title>Návrh tried modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</title>
            <para>
                Návrh tried modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer je 
                zobrazený na obrázku Class Diagram modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                Triedy sú zabalené do jednotlivých balíkov, ktorých triedy
                vykonávajú podobnú funkcionalitu, alebo sú vzájomne tesne spjaté. <xref linkend="appACD"/>
            </para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread</emphasis> -
                        Tento balík obsahuje triedy, ktoré sa starajú o načítavanie
                        vlasntostí definovaných v externom súbore a triedu, ktorá poskytuje
                        rozhranie pre prácu s celým systémom.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</emphasis> - 
                                Trieda poskytuje rozhranie pre prácu so systémom. Počas
                                celého procesu je vytorená iba jedna instancia tejto triedy.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">PropertiesReader</emphasis> -
                                Trieda, ktorá načíta a zvaliduje hodnoty parametrov z externého
                                súboru <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">WebAnalyzerProperties</emphasis> - 
                                Trieda slúži na uchovanie informácií načítaných z externého
                                súboru. Ostatné triedy majú takto prístup ku všetkým informáciam
                                definovaným užívateľom.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread.analyzer.util</emphasis> -
                        Tento balík obsahuje triedy, ktoré obsahujú často používané funkcie
                        WebAnalyzeru. Okrem toho obsahuje triedu, kde sú definované konštanty
                        pre jednoduchú identifikáciu rozhodovacích kritérií.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">FilterText</emphasis> - 
                                Trieda poskytuje funkcie na prácu s textom.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">PropertiesReader</emphasis> -
                                Trieda, ktorá obsahuje konštanty na lepšiu identifikáciu
                                rozhodovacích kritérií.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread.analyzer</emphasis> -
                        Tento balík obsahuje triedy, ktoré uchovávajú celý stav
                        procesu a poskytujú hlavný komunikačný kanál pre ostatné triedy.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">UrlAnalyzer</emphasis> - 
                                Trieda, ktorá inicializuje všetky požadované rozhodovacie kritéria a
                                spúšťa analýzu. Okrem toho počíta štatistiky a rozhoduje či je 
                                stránka validná.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">PointsCounter</emphasis> -
                                Trieda, ktorá uchováva počet dosiahnutých bodov pre
                                analyzovanú stránku. Pri nájdení hľadanej informácie
                                vyhľadávače zvyšujú počet bodov. Na konci sa porovná
                                dosiahnutý počet bodov s požadovanou minimálnou hranicou a 
                                rozhodne sa či je stránka validná alebo nie.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">ProcessedCrawlURI</emphasis> - 
                                Trieda, ktorá uchováva informácie o spracovávanej URI.
                                Jej názov, typ dokumentu, textový obsah a kolekciu 
                                odkazov nájdených v textovom obsahu.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread.mime</emphasis> -
                        Tento balík obsahuje triedy, ktoré identifikujú MimeType
                        dokumentu.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">Content</emphasis> - 
                                Trieda, ktorá poskytuje rozhranie na volanie tejto 
                                komponenty. Pri vytvorení instancie tohto objektu
                                sa vytvoria ostatné objekty a načítajú zoznam
                                elementov MimeType, ktorý je uložený v externom 
                                xml súbore. Na základe informácií o dokumente sa 
                                indetifikuje jeho MimeType porovnávaním so zoznamom
                                všetkých MimeTypov (napr. podľa koncovky). 
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">MimeType</emphasis> -
                                Trieda, ktorá uchováva informácie o danom MimeType.
                                Názov koncovky, popis, MagicMimeType a iné.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">MimeTypes</emphasis> - 
                                Táto trieda poskytuje úlohu repozitára všetkých MimeType, 
                                prostredníctvom ktorých dokáže identifikovať MimeType
                                dokumentu na základe poskytnutých informácií.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">MimeTypesReader</emphasis> - 
                                Trieda jednoducho načíta zoznam MimeType z externého
                                xml súboru a naplní ním objekt MimeTypes.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">MimeTypesException</emphasis> - 
                                Výnimka pri identifkovaní MimeType.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem> 
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread.managers</emphasis> -
                        Tento balík obsahuje triedy, ktoré sú nevyhnutné pre prácu
                        niektorých vyhľadávačov. Inicializujú databázové spojenia, 
                        otvárajú súbory a iné zdroje používané vyhľadávačmi. Musia sa inicializovať
                        pred spustením analýzy a musia poskytovať synchronizované metódy, aby
                        sa dali použiť viacerými vláknami.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">WebAnalyzerManager</emphasis> - 
                                Hlavná trieda, ktorá inicializuje potrebné objekty
                                IManager, tak ako je definované užívateľom. Po skončení
                                procesu volá metodu close() každého vytvoreného objektu IManager, 
                                aby sa uzavreli všetky otvorené spojenia.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">IManager</emphasis> -
                                IManager je rozhranie, ktoré musia implementovať 
                                manažéri. Manažér obsahuje metódy požadované rozhraním
                                a synchronizovanú metódu používanú odpovedajúcim vyhľadávačom.
                                (napr. GeoIPSearcher používa GeoIPManager na získanie informácií
                                o danej IP z databáze)
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
                <listitem>
                    <para><emphasis>cz.webarchiv.webanalyzer.multithread.criteria</emphasis> -
                        Tento balík obsahuje triedy, ktoré predstaujú vyhľadávače fungujúce  
                        na základe konkrétnych kritérií. Všetky vyhľadávače musia
                        implementovať rozhranie ISearcher.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">ISearcher</emphasis> - 
                                Rozhranie ISearcher požaduje metódu <emphasis>search(ProcessedCrawlURI curi)</emphasis>, 
                                ktorá vyhľadáva konkrétnu informáciu a metódu <emphasis>toSring()</emphasis>, 
                                ktorá poskytuje štatistiky získané počas spracovania danej
                                ProcessedCrawlURI.
                                Realizácia napr. EmailSearcher, GeoIPSearcher, PhoneSearcher...
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </sect1>
        <sect1>
            <title>Workflow modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</title>
            <para>
                Postup identifikovania URI sme rozdelili na 4 časti.
                Každá časť predstavuje jednu metódu volanú zo systému <indexterm><primary>Heritrix</primary></indexterm>Heritrix
                (konkrétne z modulu <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer).
            </para>
            <sect2>
                <title>Inicializácia</title>
                <para>
                    <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer sa musí pred použitím nainicializovať. Inicializácia
                    WebaAnalyzeru sa uskutočňuje zároveň s inicializáciu prosesoru
                    <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, ktorý je súčasťou Heritrixu. Postup
                    inicializovania: <xref linkend="appAsd1"/>
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">1.initialize()</emphasis> - 
                            Systém <indexterm><primary>Heritrix</primary></indexterm>Heritrix volá prostredníctvom procesoru <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, 
                            metódu <emphasis>inicialize()</emphasis>.
                        </para>
                    </listitem> 
                    <listitem>
                        <para><emphasis role="bold">2.create PropertiesReader</emphasis> - 
                            Pri inicializácií je nutné načítať nastavené vlastnosti v 
                            externom súbore <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis>, ktoré definujú
                            požiadavky na identifikáciu.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">3. loadPropertiesReader</emphasis> - 
                            Metóda načíta hodnoty pre konkrétne vlastnosti a zvaliduje
                            ich. Ak je hodnota nevalidná, systém vyhodí výnimku.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">4. create WebAnalyzerProperties</emphasis> - 
                            PropertiesReader vytvorí objekt WebAnalyzerProperties a naplní
                            mu všetky hodnoty jednotlivých vlastností. WebAnalyzerProperties
                            bude uchovávať tieto informácie aby k nim mohli 
                            ostatné triedy pristupovať.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">5. create WebAnalyzerManager</emphasis> - 
                            Vytvára sa objekt WebAnalyzerManager, ktorý spravuje ostatných
                            potrebných manažérov .
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">6. initializeManagers()</emphasis> - 
                            Každý manažér reprezentovaný rozhraním IManager sa musí
                            pred použítím nainicializovať.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">7. getSearchersToUse()</emphasis> - 
                            WebAnalyzerManager potrebuje zistiť, ktorých manažérov
                            má vytvoriť.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">8. return searchers</emphasis> - 
                            WebAnalyzerProperties vráti zoznam vyhľadávačov, ktoré požadoval 
                            uživateľ pri konfigurácií. Na základe vyhľadávačov WebAnalyzerManager
                            spozná, ktorých manažérov má vytvoriť.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">9. create IManager</emphasis> - 
                            Vytvárajú sa manažéri. Každý manažér bude predstavovať práve
                            jednu instanciu, ktorá sa bude používať viacerými vláknami.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">10. init()</emphasis> - 
                            Každý manažér sa musí inicializovať, aby otvoril potrebné spojenia
                            do databáze, súboru alebo iných zdrojov.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Identifikácia MimeType dokumentu</title>
                <para>
                    Pred samotnou analýzou dokumentu je nutné overiť jeho typ, aby
                    sme sa vyhli textovej analýze binárneho dokumentu.
                    Užívateľ však 
                    môže chcieť identifikovať stránky iba podľa IP adresy alebo názvu URL.
                    V tomto prípade by mal užívateľ nakonfigurovať <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer tak, 
                    aby používal iba odpovedajúce kritéria pri identifikácií. Moduly
                    na vyhľadávanie e-mailov, telefónych čísel alebo slov v slovníku
                    by mali byť vypnuté. <xref linkend="appAsd2"/>
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">1. isContentTypeText()</emphasis> -
                            <indexterm><primary>Heritrix</primary></indexterm>Heritrix volá metódu isContentTypeText(), ktorá spúšťa identifikáciu
                            MimeType dokumentu z danej URI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">2. create Content</emphasis> -
                            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer vytvára objekt Content, ktorý nainicializuje
                            potrebné objekty a poskytuje metódu na identifikovanie
                            MimeType. Instancia objektu Content sa vytvára pri každom
                            volaní metódy <emphasis>isContentTypeText()</emphasis>. 
                            Každé vlákno vlastní svoju instanciu tohto objektu.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">3. init()</emphasis> -
                            Metóda <emphasis>init()</emphasis> inicializuje ostatné potrebné objekty. Objekty
                            MimeTypes a MimeTypesReader sú konštantné, ich instancia sa vytvára
                            len raz, pri prvom volaní tejto komponenty.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">4. addMimeTypes()</emphasis> -
                            Objekt MimeTypes volá túto metódu, aby naplnil
                            svoju kolekciu všetkých MimeType, ktoré sa neskôr použijú
                            pri identifikácii neznámeho dokumentu.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">5. readAllMimeTypes()</emphasis> -
                            Metóda vytvára spojenie s externým XML súborom a číta z neho
                            jednotlivé elementy MimeType.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">6. create MimeType</emphasis> -
                            Z každého elementu MimeType zapísaného v XML dokumente sa 
                            vytvorí odpovedajúci objet MimeType a pridá sa do kolecie všetkých
                            MimeType záznamov.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">7. return MimeTypes</emphasis> -
                            Naplní sa kolekcia MimeType záznamov v objekte MimeTypes.
                            Tým sa dokončí potrebná inicializácia, ktorá sa už viac
                            krát nebude opakovať. Pri ostatných volaniach sa zavolá priamo
                            metóda <emphasis>getContentType()</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">8. getContentType</emphasis> -
                            Metóda, ktorá hľadá MimeType skúmaného dokumentu.                        
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">9. getMimeTypes()</emphasis> -
                            Podľa informácií získaných zo skúmaného dokumentu sa hľadajú
                            odpovedajúce MimeType.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">10. getMimeTypes</emphasis> -
                            Objekt sa snaží zistiť MimeType skúmaného dokumentu podľa
                            názvu URI alebo bytov reprezentujúcich skúmaný dokument.
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">11. return mimeTypes</emphasis> -
                            Vráti sa zoznam možných odpovedajúcich MimeType.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">12. return MimeType</emphasis> -
                            Zo zoznamu odpvedajúcich MimeType sa jeden vyberie a ten sa vráti
                            ako identifikovaný MimeType.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">13. return true if text</emphasis> -
                            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer vráti systému <indexterm><primary>Heritrix</primary></indexterm>Heritrix logickú hodnotu true, iba ak
                            je identifikovaný MimeType typu <emphasis>text</emphasis>.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Analýza</title>
                <para>
                    Po nainicializovaní modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer môžeme začať používať jeho
                    metódu na analyzovanie. <xref linkend="appAsd3"/>
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">1. run()</emphasis> - 
                            <indexterm><primary>Heritrix</primary></indexterm>Heritrix volá metódu <emphasis>run()</emphasis>, ktorá spúšťa analýzu.
                            Metóde run sú predané parametre, ktoré predstavujú informácie
                            získané z Heritrixu. Medzi významné patria názov URI, ktorá sa analyzuje, 
                            jej textový obsah a množina odkazov objavených na tejto URI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">2. create UrlAnalyzer</emphasis> - 
                            Pri každom volaní metódy <emphasis>run()</emphasis> sa vytvorí nová instancia
                            objektu UrlAnalyzer, ktorý si pamätá stav pri spracovaní
                            konkrétnej URI. Tým dosiahneme, že sa bude uskutočňovať
                            analýza paralelne vo viacerých vláknach. Samotný <indexterm><primary>Heritrix</primary></indexterm>Heritrix
                            pri defaultnom nastavení spúšťa 50 vláken, ktoré potom môžu
                            súčasne používať modul <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">3. create PointsCounter</emphasis> - 
                            Pre každú instanciu UrlAnalyzer sa vytvorí instancia PointsCounter, ktorá
                            si pamätá počet nazbieraných bodov pre analyzovanú URI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">4. getSearchersToUse()</emphasis> - 
                            Z už vytvoreného objektu WebAnalyzerProperties si získame zoznam
                            vyhľadávačov, ktoré sa majú pri analýze použiť.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">5. return searcherToUse</emphasis> - 
                            Metóda vráti zoznam vyhľadávačov, definovaný užívateľom.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">6. create ISearcher</emphasis> - 
                            Pre každý záznam zo zoznamu vyhľadávačov sa vytvorí odvedajúci objekt.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">7. setPointsCounter()</emphasis> - 
                            Každá instancia vyhľadávača si priradí už vytvorený objekt
                            PointsCounter, ktorý bude používať. Každý vyhľadávač pri 
                            nájdení hľadanej informácie pripočíta alebo
                            odpočíta počet bodov analyzovanej stránke.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">8. getProperties()</emphasis> - 
                            Počet bodov s ktorými
                            vyhľadávač pracuje je taktiež definovaný v externom súbore a 
                            je prístupný cez objekt WebAnalyzerProperties, z ktorého si
                            vyhľadávače všetky hodntoy získajú.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">9. return props</emphasis> - 
                            WebAnalyzerProperties vráti hodntoty vlastností, ktoré používa
                            konkrétny vyhľadávač.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">10. setIManager()</emphasis> - 
                            Niektoré vyhľadávače pristupujú k databázam alebo externým
                            súborom, a preto používajú manažerov, ktoré poskytujú synchronizované 
                            metody volané odpovedajúcim vyhľadávačom. Pri vytvorení si 
                            musí každý vyhľadávač asociovať svoj už vytvorený manažér.
                            Tým sa končí vytváranie vhľadávačov, ktoré sa môžu použiť pri analýze.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">11. analyze()</emphasis> - 
                            Metóda analyze() už má pripravené všetky podklady pre 
                            spustenie analýzy, tak aby sa použili tie vyhľadávače, ktoré
                            boli nadefinované.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">12. create ProcessedCrawlURI</emphasis> - 
                            Pri analýze URI sa vytvorí objet ProcessedCrawlURI, ktorý
                            zabaľuje informácie o URI predanej z Heritrixu (názov, typ, obsah, odkazy).
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">13. return curi</emphasis> - 
                            Vytvorená instancia sa vráti objektu UrlAnalyzer, aby ju mohol 
                            použiť ako parameter pre každý vyhľadávač.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">14. search(curi)</emphasis> - 
                            V cykle sa spustí každý nadefinovaný vyhľadávač jeho spúšťacou metódou 
                            <emphasis>search(ProcessedCrawlURI curi)</emphasis>. 
                            Každý vyhľadávač pracuje 
                            nad konkrétnými atribútmi objektu ProcessedCrawlURI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">15. uses IManager</emphasis> - 
                            Pri vyhľadávaní používajú niektoré vyhľadávače svojich manažérov.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">16. increment()</emphasis> - 
                            Pri nájdení hľadanej informácie sa inkrementuje počet bodov
                            objektu PointsCounter. PointsCounter poskytuje synchronizované
                            metódy, aby bol zachovaný konzistentý stav v multivláknovom prostredí.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">17. getStatistics(curi)</emphasis> - 
                            Po spracovaní skúmanej URI všetkými vyhľadávačmi
                            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer vypíše získané štatistiky. Vypisovanie
                            je nastavené do viacerých logovacích súborov.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">18. isValid()</emphasis> - 
                            Na základe analýzy sa vyhodnotí či je stránka validná alebo nie.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">19. getPoints()</emphasis> - 
                            UrlAnalyzer požaduje počet dosiahnutých bodov z objektu PointsCounter.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">20. return points</emphasis> - 
                            Vráti sa počet dosiahnutých bodov, ktoré sa použijú na výsledné vyhodnotenie
                            spracovávanej URI.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">21. valid = (points >= minPointsToValid)</emphasis> - 
                            Vyhodnotenie validity funguje na základe porovnania získaných bodov a bodov
                            predstavujúcich hranicu, ktorú treba prekonať aby bola stránka identifikovaná ako
                            validná. Táto hranica je definovaná užívateľom v externom súbore.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">22. return valid</emphasis> - 
                            UrlAnalyzer vracia logickú hodnotu.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">23. return valid</emphasis> - 
                            <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer predáva Heritrixu informáciu, či je analyzovaná
                            URI identifikovaná ako validná.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Uzavrenie</title>
                <para>
                    Keď skončí <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis> v Heritrixe, tak sa následne zatvárajú
                    všetky procesory, ktoré boli použité. Preto sme v integračnom 
                    procesore <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer pri jeho finalizovaní zavolali
                    metódu na finalizáciu modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. Tým zabezpečíme, že
                    sa <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer správne ukončí, aby nevznikali zbytočné problémy
                    v spojení s Heritrixom. <xref linkend="appAsd4"/>
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">1. close()</emphasis> -
                            <indexterm><primary>Heritrix</primary></indexterm>Heritrix volá metódu <emphasis>close()</emphasis> objektu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer, ktorá
                            ukončí všetky spojenia a iné relácie.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">2. closeManagers()</emphasis> -
                            Zatvoria sa spojenia s DB, súbormi a inými zdrojmi používanými
                            manažérmi.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">3. close()</emphasis> -
                            Každý manažér volá svoju metódu <emphasis>close()</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">4. clearProperties()</emphasis> -
                            Nakoniec sa vymažú nastavenia definované v objekte WebAnalyzerProperties.
                        </para>
                    </listitem>
                </itemizedlist>
            </sect2>
        </sect1>
        <sect1>
            <title>Konfigurácia systému</title>
            <para>
                Konfigurácia celého systému sa skladá z konfigurácie Heritrixu, 
                prostredníctvom jeho webového rozhrania a z konfigurácie WebAnalyzeru
                cez externý súbor <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis>.
                <indexterm><primary>Heritrix</primary></indexterm>Heritrix musíme nastaviť tak aby používal naše integračné procesory
                (<indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, LinksScoper, ARCWriterProcessor). 
            </para>
            <sect2>
                <title>Konfigurácia Heritrixu</title>
                <para>
                    Požiadavky na <indexterm><primary>Heritrix</primary></indexterm>Heritrix.
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Na vstupe by mali byť <indexterm><primary>semienka</primary></indexterm>semienka, ktoré predstavujú
                            odhodené odkazy zo <emphasis>sklizne_cz_2007</emphasis>. Tieto <indexterm><primary>semienka</primary></indexterm>semienka
                            sú veľkí konkurenti na české stránky mimo 
                            národnej domény.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Nastavenie väčšiny procesorov môže ostať, tak ako
                            sú pôvodne nastavené pri vytvorení novej úlohy - 
                            <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis>
                            Heritrixu. V odpovedajúcich reťaziach však musíme pridať
                            naše integračné procesory.
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis><indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer</emphasis> -
                                    do reťaze <emphasis>Extractor processing chain</emphasis>musíme
                                    pridať <indexterm><primary>ExtractorWebAnalyzer</primary></indexterm>ExtractorWebAnalyzer, ktorý priamo používa 
                                    modul <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer. Procesor musíme pridať
                                    na samý koniec reťaze.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis><indexterm><primary>ARCWriterProcessorWebAnalyzer</primary></indexterm>ARCWriterProcessorWebAnalyzer</emphasis> -
                                    do reťaze <emphasis>Write/Index processing chain</emphasis> musíme
                                    pridať tento procesor, ktorý nearchivuje <indexterm><primary>DNS</primary></indexterm>DNS záznamy.
                                    Pôvodný procesor ARCWriterProcessor odstránime.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis><indexterm><primary>LinksScoperWebAnalyzer</primary></indexterm>LinksScoperWebAnalyzer</emphasis> -
                                    Tento procesor pridáme do reťaze <emphasis>Post-processing chain</emphasis>.
                                    Procesor zabezpačuje správne spracovanie odkazov a nastavovanie
                                    príslušných príznakov pre spracovávané odkazy.
                                    Pôvodný procesor LinksScoper odstránime.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>
                            Po nastavení procesorov musíme ďalej nastaviť
                            moduly <emphasis>Deciding rule</emphasis> a to v 
                            nasledujúcom poradí. Tieto nastavenia sa nachádzajú v
                            záložke <emphasis>submodules</emphasis>. Bližšie informácie sú v 
                            užívateľskej príručke Heritrixu.
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>1. AcceptDecideRule</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>2. TooManyHopsDecideRule</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>3. TooManyPathSegmentsDecideRule</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>4. MatchesRegExpDecideRule</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>
                            Posledné nastavenie v Heritrixe je v záložke 
                            <emphasis>settings</emphasis>, kde nastavíme konkrétne hodnoty
                            pre moduly Deciding rule.
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>MatchesRegExpDecideRule</emphasis> -
                                    Nastavíme, aby sa každý objavený odkaz, ktorý odpovedá
                                    regulárnemu výrazu odhodil. Regulárny výraz na 
                                    na zistenie českých URL <emphasis>^.*\.cz[\W].*$</emphasis>.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>Počet vláken <indexterm><primary>ToeThread</primary></indexterm>ToeThread</emphasis> -
                                    Môžeme nastaviť počet vláken, ktoré budú súčasne 
                                    spracovávať URI adresy. Rozsah 1-200.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Ďalej sa nastavujú ostatné podrobnosti, ktoré
                                    sú popísané v užívateľskej príručke.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
            </sect2>
            <sect2>
                <title>Konigurácia modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</title>
                <para>
                    Konfigurácia modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer sa uskutočňuje pred spustením
                    nadefinovanej úlohy <emphasis><indexterm><primary>crawl job</primary></indexterm>crawl job</emphasis> Heritrixu. 
                    Všetko potrebné sa nachádza v jednom externom súbore
                    <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis> <xref linkend="appB"/>.
                </para>
                <para>                    
                    V súbore <emphasis><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.properties</emphasis> môžeme nájsť vlastnosti a ich hodnoty, ktoré
                    systém <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer používa. Medzi dôležité patria hodnoty vlastností:
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.urlanalyzer.min.valid.points=200</emphasis> -
                            táto vlastnosť definuje aký počet
                            bodov musí skúmaný dokument pri analýze dosiahnuť, aby bol identifikovaný ako
                            validný.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.urlanalyzer.depth.toarchive=3</emphasis> -
                            táto vlastnosť slúži pre <indexterm><primary>Heritrix</primary></indexterm>Heritrix, 
                            ktorý ju používa na archivovanie odkazov z validnej stránky do určitej hĺbky. 
                            Ak je nastavená hodnota 0, tak sa archivuje len validná stránka, spolu s jej zdrojmi
                            (obrázky, css štýly, audio a video dokumenty), ktoré sa na nej nachádzajú. Ostanté
                            odkazy sú ignorované. 
                            Ak nastavíme hodntotu na 3, tak sa budú okrem validnej stránky
                            archivovať všetky odkazy z nej vedúce a to až do hĺbky 3.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Ostatné vlastnosti, ktoré sa v súbore nachádzajú sú vlastnosti konkrétnych vyhľadávačov.
                </para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold"># properties for emailSearcher</emphasis> -
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.searcher.email.use=1</emphasis> -
                            pri analýze sa má použiť vyhľadávač emailSearcher.
                            Hodnota 0 znamená, že komponenta sa nemá použiť.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.searcher.email.regexp=([a-z0-9._-]+@[a-z0-9.-]+\\.cz)</emphasis> -
                            EmailSearcher vyhľadáva z daného kontextu všetky emaily. Pomocou regulárneho výrazu si
                            môžeme nastaviť, ktoré z nich nás zaujímajú. Zadaný regulárny výraz ukazuje, že zo všetkých
                            e-mailov hľadáme iba tie s doménou .cz.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"><indexterm><primary>WebAnalyzer</primary></indexterm>webanalyzer.searcher.email.point=1</emphasis> -
                            Vždy pri nájdení hľadaného e-mailu sa pripočíta analyzovanej stránke definovaný počet bodov.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Podobne sú definované ostatné vlastnosti vyhľadávačov.
                </para>
            </sect2>
            <sect2>
                <title>Spustenie Heritrixu</title>
                <para>
                    Po tom ako sme nakonfigurovali oba systémy môžeme spustiť 
                    nadefinovanú úlohu Heritrixu. Heririx začne prehľadávať
                    web a s pomocou modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer bude identifikovať 
                    české stránky, ktoré následne archivuje.
                </para>
                <para>
                    Priebeh celého procesu môžeme sledovať priamo cez webové rozhranie
                    Heritrixu. Podrobné informácie sa zapisujú do viacerých logov.
                    Niektoré logujú čisto priebeh Heritrixu, iné logujú štatisktiky
                    , ktoré produkuje <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer 
                    pri analyzovaní stránok. Štatisktiky
                    ukazujú všetky informácie o spracovávanej URI a počet dosiahnutých
                    bodov v konkrétnych vyhliadavačoch. Samozrejme je možné 
                    po úprave logovacej úrovne v súbore <emphasis>log4j.xml</emphasis> logovať aj 
                    konkrétne nájdene hodnoty.
                </para>
            </sect2>
        </sect1>
        <sect1>
            <title>Komponenty modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer</title>
            <para>
                <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer uskutočňuje analýzu pomocou jednotlivých vyhľadávačov, 
                ktoré sú modulárne, tak aby sa dali nové kritéria jednoducho pridávať
                pomocou implementovania rozhrania. Každý nový vyhľadávač musí dediť
                abstraktnú triedu AStatisticsSearcher, ktorá slúži na počítanie štatistík.
                Štatiskity vyjadrujú koľko percent zo všetkých nájdených elementov
                je validných. Napríklad pri hľadaní českých e-mailov sa na stránke 
                môžu vyskytovať 4 e-maily, ale len 2 z nich budú české. Štatistiky
                budú uvádzať hodnotu 50% pre vyhľadávač EmailSearcher.
            </para>
            <sect2>
                <title>EmailSearcher</title>
                <para>
                    Vyhľadávač e-mailov funguje na základe prehľadávania textového
                    obsahu spracovávanej URI. Tento textový obsah zvyčajne predstavuje
                    zdrojový kód stránky. EmailSearcher vyhľadáva všetky e-maily
                    pomocou regulárneho výrazu. Každý nájdený e-mail je ďalej podrobený
                    kontrole, či spĺňa požiadavky definované užívateľom. Užívateľ si 
                    takto môže jednoducho nakonfigurovať, či hľadá e-maily určitej
                    domény, hostu alebo nejaký konkrétny e-mail. Podobne fungujú 
                    ostatné vyhľadávače : telefónne čísla, IP adresy, html atribút lang.
                    Pri nájdení požadovaného e-mailu EmailSearcher zvýši počet
                    bodov danej URI.
                </para>
            </sect2>
            <sect2>
                <title>PhoneSearcher</title>
                <para>
                    Vyhľadávač telefónnych čísel funguje podobne ako EmailSearcher. Taktiež
                    prehľadáva textový obsah spracovávanej URI pomocou regulárnych
                    výrazov. Tento text je však pred vyhľadávaním upravený triedou
                    FilterText, ktorá poskytuje funkcie na odfiltrovanie nepodstatných
                    znakov, html tagov  a iných skriptov zahrnutých v zdrojovom texte
                    stránky. Užívateľ si môže v konfiguračnom súbore sám zvoliť
                    aké telefónne čísla hľadá, pomocou regulárneho výrazu.
                </para>
            </sect2>
            <sect2>
                <title>HtmlLangSearcher</title>
                <para>
                    Ďalším kritériom pri identifikovaní stránky môže byť hodnota
                    html tagu <emphasis>lang</emphasis>. Veľká väčšina internetových
                    stránok má hodnotu tohto tagu definovanú. Užívateľ môže
                    nastaviť hľadanú hodnotu v konfiguračnom súbore 
                    (cs, sk, en, atd).
                </para>
            </sect2>
            <sect2>
                <title>GeoIPSearcher</title>
                <para>
                    Zaujímavým kritériom pri analyzovaní je kód krajiny, z ktorej
                    stránka pochádza a  zároveň kódy krajín z ktorých pochádzajú odkazy
                    objavené na tejto stránke. Modul používa funkcie projektu <indexterm><primary>MaxMind</primary></indexterm>MaxMind.                    
                </para>
                <para>
                    Projekt sa zaoberá geologickou lokalizáciou danej IP adresy.
                    Ponúka varianty <emphasis>GeoLite Country</emphasis> a <emphasis>GeoLite City</emphasis>, ktoré lokalizujú 
                    krajinu a mesto, odkiaľ pochádza IP adresa (je hostovaná na nejakom servery).
                    Tieto varianty ponúkajú
                    zdarma. My použijeme <emphasis>GeoLite Country</emphasis>, pretože chceme zistiť krajinu
                    danej IP adresy. <emphasis>GeoLite Country</emphasis> v podstate obsahuje databázu
                    IP adries s ich informáciami. K tejto databáze dodávajú API, pomocou
                    ktorého sa dajú informácie o IP adrese rýchlo vyhľadať. 
                    Náš vyhľadávač používa svojho manažéra, ktorý volá funkcie z tohoto
                    API. Manažér musí pred používaním inicializovať databázu <emphasis>GoeLite Country</emphasis>. 
                    Pri vyhľadávaní nám API vráti kód krajiny danej IP adresy vo formáte
                    cz, sk a podobne. Ak sa kód krajiny zhoduje s kódom zadaným užívateľom, 
                    tak sa analyzovanej stránke pripočítajú body.
                    Keďže sa Internet stále rozrastá je nutné túto
                    databázu občas aktualizovať.
                </para>
            </sect2>
            <sect2>
                <title>DictionarySearcher</title>
                <para>
                    Táto komponenta slúži na vyhľadávanie slov v konkrétnom slovníku.
                    Pomáha pri identifikácií českého jazyka na základe slov nachádzajúcich 
                    sa v kontexte stránky. Pred spracovaním textu je použitý filter, 
                    ktorý upraví text do vhodnej podoby. Odstránia sa skripty, kód
                    a nečitateľné znaky. Prefiltrovaný text sa ďalej upraví na jeden 
                    reťazec, obsahujúci konečnú postupnosť slov a medzier.
                    Vyhľadávač takto upravený text parsuje po jednom slove a volá
                    metódu svojo manažéra, ktorý toto slovo vyhľadáva v slovníku.
                    Ak sa slovo nájde, tak sa pripočíta počet bodov definovaný užívateľom.
                </para>
                <sect3>
                    <title>Slovník slov</title>
                    <para>
                        Slovník slov je vlastne zoznam slov. Pri vytváraní
                        slovníka českých slov, som použil korpus českého jazyka ako 
                        základný zdroj. Slovník musí byť rýdzo český. To znamená, že nemôže obsahovať
                        slová, ktoré sa vyskytujú aj iných jazykoch, a Ppreto bolo nutné
                        tieto slová odstrániť. Napríklad slovo <emphasis>auto</emphasis>
                        sa nachádza v českom, slovenskom aj anglickom jazyku. 
                        Najviac českých slov sa prekrýva
                        so slovenským jazykom a preto bolo nutné tieto slová odstrániť pomocou
                        korpusu slovenského jazyka. 
                        Výsledná fyzická podoba zoznamu 
                        rýdzo českých slov bol textový súbor, v ktorom bolo na každom 
                        riadku jedno slovo.
                    </para>
                </sect3>
                <sect3>
                    <title>Vytvorenie indexu</title>
                    <para>
                        Ďalšia otázka bola, ako sa bude v tomto slovníku vyhľadávať.
                        Slovník mal okolo 14 MB, takže bol pomerne
                        veľký. Prvá varianta bola pamätať si celý zoznam slov v nejakej
                        štruktúre v pamäti. Druhá varianta bola spraviť k slovníku
                        index a pomocou neho vyhľadávať.
                    </para>
                    <para>
                        Pred vytvorením indexu je nutné slová v slovníku zoradiť
                        podľa abecedy. Následne sa vytvoril index
                        Príklad je znázornený v tabuľke: <xref linkend="tab1"/>
                        <table frame="all" pgwide="1" id="tab1">
                            <title>Index k slovníku</title>
                            <tgroup cols="2">
                                <colspec align="left" colname="col1" colwidth="5cm" />
                                <colspec align="left" colname="col2" colwidth="5cm" />
                                <tbody>
                                    <row>
                                        <entry>slovo</entry>
                                        <entry>odpovedajúci index</entry>
                                    </row>
                                    <row>
                                        <entry>abandonovat</entry>
                                        <entry>0</entry>
                                    </row>
                                    <row>
                                        <entry>abatyše</entry>
                                        <entry>12</entry>
                                    </row>
                                    <row>
                                        <entry>abdikace</entry>
                                        <entry>20</entry>
                                    </row>
                                    <row>
                                        <entry>abdikovat</entry>
                                        <entry>29</entry>
                                    </row>
                                </tbody>
                            </tgroup>
                        </table>                        
                        DictionarySearcher používa dvoch manažérov. Jeden sa stará 
                        o prístup k hodnotám indexu a druhý načítava slovo od
                        konkrétneho byte až po koniec riadku (znak <emphasis>\n</emphasis>).
                        Potom stačilo naprogramovať klasické binárne vyhľadávanie, ktoré si
                        ako pivota zvolí hodnotu <emphasis>n</emphasis> z indexu, vyjadrujúcu byte
                        na ktorom začína odpovedajúce slovo. Manažér na načítavanie slov zo 
                        slovníka takto môže preskočiť daný počet bytov a načítať priamo
                        odpovedajúce slovo. Toto slovo sa následne porovná so skúmaným 
                        slovom. Ak sa skúmané slovo nájde v slovníku
                        tak sa pre analyzovanú stránku pripočítajú body.
                    </para>
                </sect3>
                <sect3>
                    <title>Synchronizácia</title>
                    <para>
                        Každé vlákno si pri vyhľadávaní slov vytvorí vlastnú instanciu
                        objektu DictionarySearcher. Samotné čítanie zo súboru, ktoré
                        poskytuje odpovedajúci manažér je prístupné cez synchronizovanú
                        metódu.
                    </para>
                </sect3>
                <sect3>
                    <title>Ďalšie možnosti</title>
                    <para>
                        Takto vytvorená komponenta na vyhľadávanie sa dá pužiť na mnoho
                        ďalších modulov. Napríklad vyhľadávanie v zozname českých miest
                        alebo vyhľadávanie vulgárnych slov. Pri nájdení vulgárneho slova
                        budeme naopak odpočítavať body analyzovanej stránke, pretože
                        WebArchív nechce archivovať stránky s vulgárnym, pornografickým či
                        rasistickým obsahom.
                    </para>
                </sect3>
            </sect2>
            <sect2>
                <title>Ďalšie vyhľadávače ktoré chceme implementovať v budúcnosti</title>
                <para>
                </para>
            </sect2>
            <sect2>
                <title>URLSearcher</title>
                <para>
                    Pri analyzovaní stránky sú všetky odkazy na nej objavené hodnotnými 
                    informáciami pre ďalšie kriréria. Ak identifikujeme český web, tak
                    odkazy vedúce z analyzovanej stránky na stránky s českou doménou
                    by mali byť taktiež zahrnuté do bodového hodnotenia analyzovanej stránky.
                    Je totiž pravdepodovné, že takéto stránky s odkazmi do českej domény
                    môžu byť pre český národ hodnotné a preto je dôvod ich archivovať.
                    Vyhľadávač bude jednoducho prehľadávať objavené odkazy pomocou regulárneho výrazu
                    a s každým nájdeným odkazom pripočítava stránke body. Užívateľ si 
                    môže nastaviť akú doménu požaduje.
                </para>
            </sect2>
            <sect2>
                <title>ValidLinkSearcher</title>
                <para>
                    Táto komponenta bude v objavených odkazoch vyhľadávať odkazy 
                    <emphasis>hodnotné</emphasis> pre Český národ. 
                    Pod pojmom <emphasis>hodnotný</emphasis> odkaz máme na
                    mysli odkaz vedúci na typicky českú stránku. Zoznam hodnotných 
                    odkazov môžeme získať zo známych českých portálov a rozcestníkov 
                    (seznam.cz a iné). Vyhľadávanie bude implementované s využitím 
                    projektu <emphasis>Apache Lucene</emphasis>, ktoré poskytuje 
                    na tento typ činnosti vhodné API.
                </para>
            </sect2>
            <sect2>
                <title>ForbiddenLinkSearcher</title>
                <para>
                    Pri analyzovaní stránky je určite výhodné preskúmať všetky
                    jej objavené odkazy. Ak medzi objavenými odkazmi existujú také, 
                    ktoré jasne referujú na neprijateľné weby s pornografickýcm obsahom, 
                    musíme ich identifikovať a značne znížiť body analyzovanej stránke.
                    Najprv musíme získat zoznam takýchto stránok, aby sme v ňom mohli 
                    následne prehľadávať. 
                    Na prehľadávanie použijeme nástroj <emphasis>Apache <indexterm><primary>Lucene</primary></indexterm>Lucene</emphasis>.
                </para>
            </sect2>
            <sect2>
                <title>ForbiddenDictSearcher</title>
                <para>
                    Motiváciou WebArchivu je eliminovať stránky, ktoré obsahujú 
                    informácie zákazané zákonom. V tomto prípade môže byť slovník 
                    zakázaných slov jedným z kritérií. Pri nájdení nejakého slova 
                    z tohto slovníka odčítame analyzovanej stránke body, čím 
                    znížime možnosť archivovania stránok zakázaných zákonom. 
                    Tento modul zatiaľ nie je implementovaný, pretože čakáme na 
                    výsledky práce, ktorá sa zaoberá práve identifikovaním
                    takýchto stránok. Tento systém sa pokúsime zakomponovať 
                    do nášho modulu.
                </para>
            </sect2>
            <sect2>
                <title>TrigramSearcher</title>
                <para>
                    V blízkej budúcnosti plánujeme zahrnúť nový modul, ktorý
                    bude identifikovať jazyk pomocou trigramov. Na základe
                    odprúčania z laboratórie spracovania prirodzeného jazyka
                    chceme tento modul implementovať a porovnať jeho výsledky s
                    vyhľadávačom DictSearcher. Podľa skúseností z laboratórie 
                    funguje identifikácia pomocou trigramov spoľahlivo. Možno sa
                    nám podarí prebrať existujúci systém z laboratórie, aby sme
                    ho nemuseli implementovať. Potom ho stačí len zakomponovať
                    do modulu <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer a využívať jeho funcionalitu.
                </para>
            </sect2>
            <sect2>
                <title>Iné vyhľadávače</title>
                <para>
                    Plánujeme vytvoriť vyhľadávač, ktorý bude používať <emphasis>GoogleAPI</emphasis> a
                    projekt <emphasis>Whois</emphasis>. Pomocou <emphasis>Whois</emphasis> môžme 
                    zistiť adresu majitľa analyzovanej stránky).
                    Ide o problém vyžadujúci samostatnú analýzu, čo už presahuje rámec tejto práce.
                </para>
            </sect2>
            
        </sect1>
    </chapter>
    <chapter>
        <title>Testy</title>
        <para>
            Systém v tejto podobe zatiaľ nebol spustený tak aby celý proces
            sklizne mimo národnú doménu dobehol do konca. Maximálna dĺžka behu
            systému bola okolo 24 hodín. 
            Kedže sklizeň 2007 ešte nebola presunutá do Národnej knihovny nemal 
            som k dispozícií niekoľko TB na diskovom poli, ktoré som potreboval na
            rozsiahlejší test. To som však nemohol ovplyvniť. Momentálne je
            už sklizeň presunutá a môžeme spustiť testy, aby sme získali nové presnejšie výsledky.
            Je možné že objavíme aj nové chyby, ktoré sa pri sklizni trvajúcej
            1 deň neobjavili. Celý systém je ešte vo vývoji a je otestovaný
            iba v rámci aktuálnych možsnotí. Detailné testy bude nutné vykonať hneď
            ako bude viac priestoru.
        </para>
        <para>
            Z testovania sem vybrali určitý výsek štatistík pre zobrazenie do grafickej
            podoby.
            Testovali sme na vzorke 450 adries (odhodených odkazov zo sklizne 2007).
            Systém ich analyzoval v priebehu 2 minút na osobnom notebooku s internetovým
            pripojením 100 Mb/s. V Heritrixe sme nastavili maximálne 5 vláken. Spracovanie
            na výkonnom serverovom počítači je oveľa rýchlejšie a je možné nastaviť
            Heritrixu maximálny počet 200 vláken. Výsledky sú zobrazené v grafoch, 
            umiestnených v prílohe. <xref linkend="geo"/>, <xref linkend="dict"/>, <xref linkend="email"/>, <xref linkend="html"/>
        </para>
        <para>
            Graf na obrázku popisuje modrou farbou koľko elementov sa našlo na analyzovanej
            stránke pomocou konkrétneho vyhľadávača. Napríklad pri vyhľadávači GeoIPSearcher
            považujeme za element každý odkaz, ktorý sa nachádza na analyzovanej stránke. Pri 
            DictSearcher je elementom každé slovo a tak to platí pre ostatné vyhľadávače. Červená
            farba udáva, koľko z nájdených (modrých) elementov je validných (v našom prípade českých). 
            Počet nájdených elementov je znázornený na osi Y. 
            Každá hodnota na ose X predstavuje jednu analyzovanú stránku.
            V každom grafe je 450 analyzovaných stránok.
        </para>
    </chapter>
    <chapter>
        <title>Záver</title>
        <para>
        </para>
        <para>
            Na záver treba uviesť, že vývoj systému na rozpoznanie a archiváciu webu
            mimo národnú doménu bude ešte nejakú dobu pokračovať. Postupom času sa budú
            pridávať ďalšie kritéria a celý systém sa bude upravovať podľa nových požiadavkov, 
            ktoré sa objavia po väčších skúsenostiach s týmto systémom. Počas ďalšieho
            vývoja sa budeme snažiť, aby bol systém čo najviac modulárny aby boli
            zmeny či pridanie novej funkcionality jednoduché. Zároveň sa snažíme 
            vyvíjať systém tak, aby sa mohol použiť nielen na identifikovanie českého
            webu, ale aby bolo možné identifikovať aj weby iných národov. Jedinou
            úlohou pri identifikovaní webu iného národa, je zohnať odpvedajúce zdroje ako sú
            slovníky, zoznamy hodnotných odkazov alebo zoznamy miest. Tieto zdroje potom 
            upravíme do požadovanej podoby aby s nimi <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer dokázal pracovať.
        </para><para>
            Ak bude systém pracovať spoľahlivo, tak sa ho pokúsime vydať pod licenciou
            GNU ako súčasť Heritrixu. Ďalším dôležitým mílnikom je nová verzia
            Heritrixu pod názvom <emphasis><indexterm><primary>Heritrix</primary></indexterm>Heritrix 2</emphasis>, 
            ktorá vyšla nedávno a predstavuje veľký pokrok od predchodzích verzií. 
            Budeme sa snažiť <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer prospôsobiť novej
            verzii Heritrixu alebo dokonca vylepšiť celú integráciu s novými funkciami, ktoré
            <emphasis><indexterm><primary>Heritrix</primary></indexterm>Heritrix 2</emphasis> ponúka.
            Modul <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer bude voľne dostupný na stránkach webarchívu a rovnako
            sprístupnime aj skompilovanú spustiteľnú verziu Heritrixu s integrovaným 
            modulom <indexterm><primary>WebAnalyzer</primary></indexterm>WebAnalyzer.
        </para><para>
            Dúfame, že systém nájde svoje využitie a pomôže plniť ciele WebArchivu.
        </para>
    </chapter>
    
    <appendix id="appA">
        <title>A</title>
        <para>Sekvenčné diagramy popisujúce systém WebAnalyzer:
        </para>
        <figure float="1" id="appAsd1"> 
            <title>Diagram popisujúci inicializáciu systému WebAnalyzer</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="50" fileref="SD1.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>    
        <figure float="1" id="appAsd2"> 
            <title>Diagram popisujúci identifikovanie Mime Type dokumentu</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="50" fileref="SD2.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="appAsd3"> 
            <title>Diagram popisujúci priebeh analýzy dokumentu</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="50" fileref="SD3.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="appAsd4"> 
            <title>Diagram popisujúci finalizáciu systému WebAnalyzer</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="75" fileref="SD4.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="appACD"> 
            <title>Class Diagram modulu WebAnalyzer</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="60" fileref="webanalyzerCD.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>    
        <figure float="1" id="geo"> 
            <title>GeoIPSearcher výsledky</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="65" fileref="geo.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="dict"> 
            <title>DictSearcher výsledky</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="65" fileref="dict.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="html"> 
            <title>HtmlSearcher výsledky</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="65" fileref="html.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        <figure float="1" id="email"> 
            <title>EmailSearcher výsledky</title>                    
            <mediaobject>
                <imageobject>
                    <imagedata scale="65" fileref="email.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure> 
        
    </appendix>    
    
    
    <appendix id="appB">
        <title>B</title>
        <para>Ukážka konfiguračného súboru <emphasis>webanalyzer.properties</emphasis>:
        </para>
        <programlisting><![CDATA[
# Properties file for WebAnalyzer.
# As first read the readme.txt
# point properties must be in interval from 0 to 10

# properties for geoIpSearcher
WebAnalyzer.searcher.geoip.use=1
WebAnalyzer.searcher.geoip.point=1
WebAnalyzer.searcher.geoip.countrycode=cz

# properties for dictionarySearcher
WebAnalyzer.searcher.dictionary.use=1
WebAnalyzer.manager.dictionary.language=cz
WebAnalyzer.searcher.dictionary.point=1

# properties for emailSearcher
WebAnalyzer.searcher.email.use=1
WebAnalyzer.searcher.email.regexp=([a-z0-9._-]+@[a-z0-9.-]+\\.cz)
WebAnalyzer.searcher.email.point=1

# properties for phoneSearcher
WebAnalyzer.searcher.phone.use=1
WebAnalyzer.searcher.phone.regexp=\\+420 [0-9]{3} ?[0-9]{3} ?[0-9]{3}
WebAnalyzer.searcher.phone.point=1

# properties for htmlLangSearcher
WebAnalyzer.searcher.htmllang.use=1
WebAnalyzer.searcher.htmllang.regexp=lang ?= ?[\"|']? ?cs ?[\"|']?
WebAnalyzer.searcher.htmllang.point=1

# properties for urlAnalyzer, points je typu long
WebAnalyzer.urlanalyzer.min.valid.points=200
# min 0 - archives only first valid url with its images, bin links,
# max 1000000 - archives up to depth a milion of links refered from a valid url
WebAnalyzer.urlanalyzer.depth.toarchive=0
        ]]></programlisting>
    </appendix>    
    
    <appendix id="appC">
        <title>C</title>
        <para>Súčasťou práce je priložené CD, kde sú k dispozícií jednotlivé ukážky:
            <itemizedlist mark="opencircle">
                <listitem><simpara>zdrojový kód upraveného systému Heritrix</simpara></listitem>
                <listitem><simpara>zdrojový kód systému WebAnalyzer</simpara></listitem>
                <listitem><simpara>spustiteľná verzia systému Heritrix s integrovaným systémom WebAnalyzer</simpara></listitem>
                <listitem><simpara>tato práca vo formáte PDF</simpara></listitem>
                <listitem><simpara>tato práca vo formáte HTML</simpara></listitem>
            </itemizedlist>
        </para>
    </appendix>    
    
    
    <bibliography>
        <bibliodiv>
            <biblioentry>
                <abbrev>01</abbrev>
                <author>
                    <surname>WebArchiv</surname>
                </author>
                <title>WebArchiv - archiv českého webu [online]</title>
                <publisher>
                    <publishername>WebArchiv</publishername>
                </publisher>
                <pubdate>09.04.2008</pubdate>
                <releaseinfo>
                    <ulink url="http://www.webarchiv.cz">
                        http://www.webarchiv.cz
                    </ulink>
                </releaseinfo>            
            </biblioentry>
            <biblioentry>
                <abbrev>02</abbrev>
                <author>
                    <surname>WebArchiv</surname>
                </author>
                <title>Kritéria výběru webových zdrojů [online]</title>
                <publisher>
                    <publishername>WebArchiv</publishername>
                </publisher>
                <pubdate>09.04.2008</pubdate> 
                <releaseinfo>
                    <ulink url="http://www.webarchiv.cz/kriteria">
                        http://www.webarchiv.cz/kriteria
                    </ulink>
                </releaseinfo>            
            </biblioentry>
            <biblioentry>
                <abbrev>03</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Overview of the crawler [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo>
                    <ulink url="http://crawler.archive.org/articles/developer_manual/overview.html">
                        http://crawler.archive.org/articles/developer_manual/overview.html
                    </ulink>
                </releaseinfo>            
            </biblioentry>
            <biblioentry>
                <abbrev>04</abbrev>
                <author>
                    <surname>robotstxt.org</surname>
                </author>
                <title>About /robotsrobots.txt [online]</title>
                <publisher>
                    <publishername>robotstxt.org</publishername>
                </publisher>
                <pubdate>01.04.2008</pubdate>
                <releaseinfo><ulink
                    url="http://www.robotstxt.org/robotstxt.html">http://www.robotstxt.org/robotstxt.html</ulink></releaseinfo>
            </biblioentry>
            <biblioentry>
                <abbrev>05</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Some notes on the URI classes [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/uri.html">http://crawler.archive.org/articles/developer_manual/uri.html</ulink></releaseinfo>
            </biblioentry>
            <biblioentry>
                <abbrev>07</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Common needs for all configurable modules [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/chap_modules_common.html">http://crawler.archive.org/articles/developer_manual/chap_modules_common.html</ulink></releaseinfo>
            </biblioentry>
            <biblioentry>
                <abbrev>08</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Writing FrontierFrontier [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/frontier.html">http://crawler.archive.org/articles/developer_manual/frontier.html</ulink></releaseinfo>
            </biblioentry>            
            <biblioentry>
                <abbrev>09</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Writing Filter [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/writefilter.html">http://crawler.archive.org/articles/developer_manual/writefilter.html</ulink></releaseinfo>
            </biblioentry>            
            <biblioentry>
                <abbrev>10</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Writing Scope [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/scope.html">http://crawler.archive.org/articles/developer_manual/scope.html</ulink></releaseinfo>
                
            </biblioentry>            
            <biblioentry>
                <abbrev>11</abbrev>
                <author>
                    <surname>Internet  Archive</surname>
                </author>
                <title>Writing Processor [online]</title>
                <publisher>
                    <publishername>Internet  Archive</publishername>
                </publisher>
                <pubdate>26.03.2008</pubdate>
                <releaseinfo><ulink
                    url="http://crawler.archive.org/articles/developer_manual/processor.html">http://crawler.archive.org/articles/developer_manual/processor.html</ulink></releaseinfo>
            </biblioentry>      
            <biblioentry>
                <abbrev>12</abbrev>
                <author>
                    <surname>Lukáš Matejka</surname>
                </author>
                <title>Accessing the Czech Web Archive [online]</title>
                <publisher>
                    <publishername>WebArchiv</publishername>
                </publisher>
                <pubdate>09.04.2008</pubdate>
                <releaseinfo>
                    <ulink url="http://en.webarchiv.cz/files/dokumenty/ostatni/thesis.pdf">
                        http://en.webarchiv.cz/files/dokumenty/ostatni/thesis.pdf
                    </ulink>
                </releaseinfo>            
            </biblioentry>
            <biblioentry>
                <abbrev>13</abbrev>
                <author>
                    <surname>VERIO</surname>
                </author>
                <title>Whois.Net [online]</title>
                <publisher>
                    <publishername>Whois.Net</publishername>
                </publisher>
                <pubdate>18.5.2008</pubdate>
                <releaseinfo><ulink
                    url="http://www.whois.net/">http://www.whois.net/</ulink></releaseinfo>
            </biblioentry>     
            <biblioentry>
                <abbrev>14</abbrev>
                <author>
                    <surname>Gomes</surname>
                </author>
                <title>A Characterization of Portuguese Web [online]</title>
                <publisher>
                    <publishername>IWAW</publishername>
                </publisher>
                <pubdate>18.5.2008</pubdate>
                <releaseinfo><ulink
                    url="http://pandora.nla.gov.au/documents/domain_harvest_report_public.pdf">http://pandora.nla.gov.au/documents/domain_harvest_report_public.pdf</ulink></releaseinfo>
            </biblioentry>    
            <biblioentry>
                <abbrev>15</abbrev>
                <author>
                    <surname>Koerbin</surname>
                </author>
                <title>Report on the Crawl and Harvest of the Whole Australian Web Domain Undertaken during June and July 2005 [online]</title>
                <publisher>
                    <publishername>National Library of Australia</publishername>
                </publisher>
                <pubdate>10.10.2005</pubdate>
                <releaseinfo><ulink
                    url="http://bibnum.bnf.fr/ecdl/2003/proceedings.php?f=gomes">http://bibnum.bnf.fr/ecdl/2003/proceedings.php?f=gomes</ulink></releaseinfo>
            </biblioentry>    
            <biblioentry>
                <abbrev>16</abbrev>
                <author>
                    <surname>Grethe Jacobsen</surname>
                </author>
                <title>Harvesting the Danish internet – the first two years [online]</title>
                <publisher>
                    <publishername>netarkivet.dk</publishername>
                </publisher>
                <pubdate>2.5.2007</pubdate>
                <releaseinfo><ulink
                    url="http://netarkivet.dk/publikationer/CollectingTheDanishInternet_2007.pdf">http://netarkivet.dk/publikationer/CollectingTheDanishInternet_2007.pdf</ulink></releaseinfo>
            </biblioentry>  
            <biblioentry>
                <abbrev>17</abbrev>
                <author>
                    <surname>Charalampos Lampos</surname>
                </author>
                <title>Archiving the Greek Web [online]</title>
                <publisher>
                    <publishername>Athens University of Economics and Business Department of Informatics</publishername>
                </publisher>
                <pubdate>18.5.2008</pubdate>
                <releaseinfo><ulink
                    url="http://www.iwaw.net/04/Lampos.pdf">http://www.iwaw.net/04/Lampos.pdf</ulink></releaseinfo>
            </biblioentry>  
            
        </bibliodiv>
    </bibliography>
    <index></index>
</book>